/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Deployers, DeployersInterface } from "../Deployers";

const _abi = [
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "LIQ_PARAMS",
    inputs: [],
    outputs: [
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "liquidityDelta",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_PRICE_LIMIT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_PRICE_LIMIT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "REMOVE_LIQ_PARAMS",
    inputs: [],
    outputs: [
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "liquidityDelta",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x6077196080819052607860a0819052670de0b6b3a764000060c0819052600080546378ffff8865ffffffffffff19918216811790925560019290925561014060405260e09390935261010091909152670de0b6b3a763ffff1961012081905260028054909216909217905560035534801561007957600080fd5b506101d2806100896000396000f3fe6080604052600436106100435760003560e01c8063542524dd1461004f578063636ccfd2146100815780636d97c460146100cf578063c7b8e15d146100f857600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061006461010d565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561008d57600080fd5b506000546001546100ac91600281810b926301000000909204900b9083565b60408051600294850b81529290930b602083015291810191909152606001610078565b3480156100db57600080fd5b50600280546003546100ac9282810b9263010000009004900b9083565b34801561010457600080fd5b5061006461012f565b61012c600173fffd8963efd1fc6a506488495d951d5263988d26610155565b81565b61012c6401000276a3600161017c565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038281168282160390808211156101755761017561013f565b5092915050565b6001600160a01b038181168382160190808211156101755761017561013f56fea26469706673582212209794e229f9029a44b6405f2f54ac863e18eed21f35506e97760e699e31ee584e64736f6c63430008130033";

type DeployersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeployersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Deployers__factory extends ContractFactory {
  constructor(...args: DeployersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Deployers & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Deployers__factory {
    return super.connect(runner) as Deployers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployersInterface {
    return new Interface(_abi) as DeployersInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Deployers {
    return new Contract(address, _abi, runner) as unknown as Deployers;
  }
}
