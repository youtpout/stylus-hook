/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  PoolClaimsTest,
  PoolClaimsTestInterface,
} from "../PoolClaimsTest";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "manager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "unlockCallback",
    inputs: [
      {
        name: "rawData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "error",
    name: "SafeCastOverflow",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610d81380380610d8183398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610cab6100d66000396000818160560152818160ec015281816101f3015281816102390152818161030e015281816103f90152818161051f015281816105db015281816106a4015281816107130152818161084801526108ab0152610cab6000f3fe60806040526004361061003f5760003560e01c8063481c6a75146100445780638340f5491461009557806391dd7346146100aa578063d9caed12146100d7575b600080fd5b34801561005057600080fd5b506100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a86100a3366004610929565b6100ea565b005b3480156100b657600080fd5b506100ca6100c536600461096a565b6101e6565b60405161008c9190610a00565b6100a86100e5366004610929565b6103f7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166348c894916040518060a00160405280336001600160a01b03168152602001856001600160a01b03168152602001866001600160a01b031681526020018481526020016001151581525060405160200161016e9190610a33565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016101999190610a00565b6000604051808303816000875af11580156101b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101e09190810190610a90565b50505050565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461021d57600080fd5b600061022b83850185610b4b565b905080608001511561030c577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663156e29f6826020015161028884604001516001600160a01b03166001600160a01b031690565b84606001516040518463ffffffff1660e01b81526004016102ab93929190610bda565b600060405180830381600087803b1580156102c557600080fd5b505af11580156102d9573d6000803e3d6000fd5b50505050610307816040015182602001516102f7846060015161047b565b61030090610c04565b60016104a9565b6103d3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f5298aca826020015161035d84604001516001600160a01b03166001600160a01b031690565b84606001516040518463ffffffff1660e01b815260040161038093929190610bda565b600060405180830381600087803b15801561039a57600080fd5b505af11580156103ae573d6000803e3d6000fd5b505050506103d3816040015182602001516103cc846060015161047b565b60016107b9565b60408051600060208201520160405160208183030381529060405291505092915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166348c894916040518060a00160405280336001600160a01b03168152602001856001600160a01b03168152602001866001600160a01b031681526020018481526020016000151581525060405160200161016e9190610a33565b600060016001607f1b038211156104a5576040516393dafdf160e01b815260040160405180910390fd5b5090565b600082600f0b126105015760405162461bcd60e51b815260206004820152601c60248201527f616d6f756e74206973206e6f74206c657373207468616e207a65726f0000000060448201526064015b60405180910390fd5b8015610711576001600160a01b0384166105c9576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636a256b2961054d84610c04565b6040516001600160e01b031960e084901b1681526001600160a01b03881660048201526001600160801b03919091169060240160206040518083038185885af115801561059e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105c39190610c38565b506101e0565b6001600160a01b0384166323b872dd847f000000000000000000000000000000000000000000000000000000000000000061060386610c04565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526001600160801b031660448201526064016020604051808303816000875af1158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190610c51565b50604051636a256b2960e01b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636a256b29906024016020604051808303816000875af11580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c39190610c38565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f5298aca8461075a876001600160a01b03166001600160a01b031690565b61076386610c04565b6040518463ffffffff1660e01b815260040161078193929190610bda565b600060405180830381600087803b15801561079b57600080fd5b505af11580156107af573d6000803e3d6000fd5b5050505050505050565b600082600f0b1361080c5760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e74206973206e6f742067726561746572207468616e207a65726f0060448201526064016104f8565b80156108a957604051630b0d9c0960e01b81526001600160a01b03858116600483015284811660248301526001600160801b03841660448301527f00000000000000000000000000000000000000000000000000000000000000001690630b0d9c0990606401600060405180830381600087803b15801561088c57600080fd5b505af11580156108a0573d6000803e3d6000fd5b505050506101e0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663156e29f6846108f2876001600160a01b03166001600160a01b031690565b856040518463ffffffff1660e01b815260040161078193929190610bda565b6001600160a01b038116811461092657600080fd5b50565b60008060006060848603121561093e57600080fd5b833561094981610911565b9250602084013561095981610911565b929592945050506040919091013590565b6000806020838503121561097d57600080fd5b823567ffffffffffffffff8082111561099557600080fd5b818501915085601f8301126109a957600080fd5b8135818111156109b857600080fd5b8660208285010111156109ca57600080fd5b60209290920196919550909350505050565b60005b838110156109f75781810151838201526020016109df565b50506000910152565b6020815260008251806020840152610a1f8160408501602087016109dc565b601f01601f19169190910160400192915050565b81516001600160a01b039081168252602080840151821690830152604080840151909116908201526060808301519082015260809182015115159181019190915260a00190565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610aa257600080fd5b815167ffffffffffffffff80821115610aba57600080fd5b818401915084601f830112610ace57600080fd5b815181811115610ae057610ae0610a7a565b604051601f8201601f19908116603f01168101908382118183101715610b0857610b08610a7a565b81604052828152876020848701011115610b2157600080fd5b610b328360208301602088016109dc565b979650505050505050565b801515811461092657600080fd5b600060a08284031215610b5d57600080fd5b60405160a0810181811067ffffffffffffffff82111715610b8057610b80610a7a565b6040528235610b8e81610911565b81526020830135610b9e81610911565b60208201526040830135610bb181610911565b6040820152606083810135908201526080830135610bce81610b3d565b60808201529392505050565b6001600160a01b0393909316835260208301919091526001600160801b0316604082015260600190565b600081600f0b60016001607f1b03198103610c2f57634e487b7160e01b600052601160045260246000fd5b60000392915050565b600060208284031215610c4a57600080fd5b5051919050565b600060208284031215610c6357600080fd5b8151610c6e81610b3d565b939250505056fea2646970667358221220ef2dea6315198350a1b1b9c7fdda036871f374d7d0c84d55761b041857abc8c464736f6c63430008130033";

type PoolClaimsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolClaimsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolClaimsTest__factory extends ContractFactory {
  constructor(...args: PoolClaimsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_manager, overrides || {});
  }
  override deploy(
    _manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_manager, overrides || {}) as Promise<
      PoolClaimsTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PoolClaimsTest__factory {
    return super.connect(runner) as PoolClaimsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolClaimsTestInterface {
    return new Interface(_abi) as PoolClaimsTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PoolClaimsTest {
    return new Contract(address, _abi, runner) as unknown as PoolClaimsTest;
  }
}
