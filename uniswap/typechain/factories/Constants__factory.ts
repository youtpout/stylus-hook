/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Constants, ConstantsInterface } from "../Constants";

const _abi = [
  {
    type: "function",
    name: "SQRT_RATIO_121_100",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SQRT_RATIO_1_1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SQRT_RATIO_1_2",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SQRT_RATIO_1_4",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SQRT_RATIO_2_1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SQRT_RATIO_4_1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x61011261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060655760003560e01c80630b84e81c14606a57806377267b1e146098578063d1b7d6111460a2578063d6d2a04b1460ac578063dd431c4b1460bf578063e239ea421460c9575b600080fd5b607c6bb504f333f9de6484597d89b381565b6040516001600160a01b03909116815260200160405180910390f35b607c600160601b81565b607c6001605f1b81565b607c6c016a09e667f3bcc908b2fb136681565b607c600160611b81565b607c6c011999999999999999999999998156fea26469706673582212208c874956a2d13554b378bae4e5cfdefde1fdc1b4ab32c9c68cb36c4ae8ba2a0e64736f6c63430008130033";

type ConstantsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstantsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Constants__factory extends ContractFactory {
  constructor(...args: ConstantsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Constants & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Constants__factory {
    return super.connect(runner) as Constants__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantsInterface {
    return new Interface(_abi) as ConstantsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Constants {
    return new Contract(address, _abi, runner) as unknown as Constants;
  }
}
