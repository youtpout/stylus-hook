/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AddLiquidityScript,
  AddLiquidityScriptInterface,
} from "../../02_AddLiquidity.s.sol/AddLiquidityScript";

const _abi = [
  {
    type: "function",
    name: "IS_SCRIPT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "run",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x60806040526004805460ff19166001179055600c80547483fedbed11b3667f40263a88e8435fca51a03f8c016001600160a81b031990911617905534801561004657600080fd5b50610681806100566000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c04062261461003b578063f8ccbf4714610045575b600080fd5b610043610066565b005b600c546100529060ff1681565b604051901515815260200160405180910390f35b6040805160a08101825273a468864e673a807572598ab6208e49323484c6bf80825273bd97bf168fa913607b996fab823f88610dcf773760208301819052610fa0838501819052600a60608501819052733ca2cd9f71104a6e1b67822454c725fcaee35ff6608086015285516302bf260160e61b815295519395929491939092737109709ecfa91a80626ff3989d68f67f5b1dd12d9163afc980409160048082019260009290919082900301818387803b15801561012357600080fd5b505af1158015610137573d6000803e3d6000fd5b5050600c5460405163095ea7b360e01b81526101009091046001600160a01b039081166004830152683635c9adc5dea0000060248301528816925063095ea7b391506044016020604051808303816000875af115801561019b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bf919061050c565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663afc980406040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561021e57600080fd5b505af1158015610232573d6000803e3d6000fd5b5050600c5460405163095ea7b360e01b81526101009091046001600160a01b039081166004830152683635c9adc5dea0000060248301528716925063095ea7b391506044016020604051808303816000875af1158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba919061050c565b5060408051600080825260208201909252906102d583610434565b9050600081905061030a6040518060400160405280600d81526020016c506f6f6c2049442042656c6f7760981b815250610464565b610313816104aa565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663afc980406040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561037157600080fd5b505af1158015610385573d6000803e3d6000fd5b5050600c5460408051606081018252610257198152610258602082015269021e19e0c9bab240000081830152905163bec999dd60e01b81526101009092046001600160a01b0316935063bec999dd92506103e69188919088906004016105be565b6020604051808303816000875af1158015610405573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610429919061060b565b505050505050505050565b6000816040516020016104479190610624565b604051602081830303815290604052805190602001209050919050565b6104a7816040516024016104789190610638565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526104eb565b50565b6104a7816040516024016104c091815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006020828403121561051e57600080fd5b8151801515811461052e57600080fd5b9392505050565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff169084015260608083015160020b9084015260809182015116910152565b6000815180845260005b8181101561059e57602081850181015186830182015201610582565b506000602082860101526020601f19601f83011685010191505092915050565b60006101206105cd8387610535565b845160020b60a0840152602085015160020b60c0840152604085015160e08401528061010084015261060181840185610578565b9695505050505050565b60006020828403121561061d57600080fd5b5051919050565b60a081016106328284610535565b92915050565b60208152600061052e602083018461057856fea2646970667358221220787d76484ccef18e84ec14d0a4589daceeb2e6a9e7ee84ca091e96d5a0180e9064736f6c63430008130033";

type AddLiquidityScriptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddLiquidityScriptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddLiquidityScript__factory extends ContractFactory {
  constructor(...args: AddLiquidityScriptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AddLiquidityScript & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AddLiquidityScript__factory {
    return super.connect(runner) as AddLiquidityScript__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddLiquidityScriptInterface {
    return new Interface(_abi) as AddLiquidityScriptInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AddLiquidityScript {
    return new Contract(address, _abi, runner) as unknown as AddLiquidityScript;
  }
}
