/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { HookMiner, HookMinerInterface } from "../HookMiner";

const _abi = [
  {
    type: "function",
    name: "computeAddress",
    inputs: [
      {
        name: "deployer",
        type: "address",
        internalType: "address",
      },
      {
        name: "salt",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "creationCode",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "hookAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "0x6101e761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063013a236e1461003a575b600080fd5b6100a66100483660046100d8565b8051602091820120604080516001600160f81b03198185015260609590951b6bffffffffffffffffffffffff191660218601526035850193909352605580850191909152825180850390910181526075909301909152815191012090565b6040516001600160a01b03909116815260200160405180910390f35b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156100ed57600080fd5b83356001600160a01b038116811461010457600080fd5b925060208401359150604084013567ffffffffffffffff8082111561012857600080fd5b818601915086601f83011261013c57600080fd5b81358181111561014e5761014e6100c2565b604051601f8201601f19908116603f01168101908382118183101715610176576101766100c2565b8160405282815289602084870101111561018f57600080fd5b826020860160208301376000602084830101528095505050505050925092509256fea2646970667358221220250c14fa89bd71cc9a620dbab886914d0d53c7361ec6f7bd9c55ca5f097f745864736f6c63430008130033";

type HookMinerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HookMinerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HookMiner__factory extends ContractFactory {
  constructor(...args: HookMinerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HookMiner & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HookMiner__factory {
    return super.connect(runner) as HookMiner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HookMinerInterface {
    return new Interface(_abi) as HookMinerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HookMiner {
    return new Contract(address, _abi, runner) as unknown as HookMiner;
  }
}
