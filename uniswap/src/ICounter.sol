// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

/**
 * This file was automatically generated by Stylus and represents a Rust program.
 * For more information, please see [The Stylus SDK](https://github.com/OffchainLabs/stylus-sdk-rs).
 */

interface ICounter {
    function beforeSwapCount(bytes32 pool_id) external view returns (uint256);

    function afterSwapCount(bytes32 pool_id) external view returns (uint256);

    function beforeAddLiquidityCount(
        bytes32 pool_id
    ) external view returns (uint256);

    function beforeRemoveLiquidityCount(
        bytes32 pool_id
    ) external view returns (uint256);

    function setHook(address value) external;

    function addBeforeSwap(bytes32 key) external;

    function addAfterSwap(bytes32 key) external;

    function addBeforeAddLiquidity(bytes32 key) external;

    function addBeforeRemoveLiquidity(bytes32 key) external;

    error NotHook();

    error HookAlreadyDefined();
}