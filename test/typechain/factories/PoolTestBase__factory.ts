/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { PoolTestBase, PoolTestBaseInterface } from "../PoolTestBase";

const _abi = [
  {
    type: "function",
    name: "manager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "unlockCallback",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class PoolTestBase__factory {
  static readonly abi = _abi;
  static createInterface(): PoolTestBaseInterface {
    return new Interface(_abi) as PoolTestBaseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PoolTestBase {
    return new Contract(address, _abi, runner) as unknown as PoolTestBase;
  }
}
