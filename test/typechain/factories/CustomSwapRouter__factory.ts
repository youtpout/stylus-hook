/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  CustomSwapRouter,
  CustomSwapRouterInterface,
} from "../CustomSwapRouter";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_manager",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "MAX_PRICE_LIMIT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_PRICE_LIMIT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "manager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "simpleSwap",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "zeroForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "amount",
        type: "int256",
        internalType: "int256",
      },
    ],
    outputs: [
      {
        name: "delta",
        type: "int256",
        internalType: "BalanceDelta",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swap",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "params",
        type: "tuple",
        internalType: "struct IPoolManager.SwapParams",
        components: [
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "amountSpecified",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "sqrtPriceLimitX96",
            type: "uint160",
            internalType: "uint160",
          },
        ],
      },
      {
        name: "testSettings",
        type: "tuple",
        internalType: "struct PoolSwapTest.TestSettings",
        components: [
          {
            name: "withdrawTokens",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "settleUsingTransfer",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "currencyAlreadySent",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "hookData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "delta",
        type: "int256",
        internalType: "BalanceDelta",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unlockCallback",
    inputs: [
      {
        name: "rawData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "error",
    name: "ERC20TransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoSwapOccurred",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051611afb380380611afb83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051611a0f6100ec60003960008181606c015281816101690152818161030c0152818161042b0152818161054a0152818161096701528181610a3b01528181610c2301528181610c7101528181610d5a01528181610e1601528181610edf01528181610f4e015281816110a301526111060152611a0f6000f3fe6080604052600436106100555760003560e01c8063481c6a751461005a578063542524dd146100ab5780636646135b146100c057806381c882ea146100e157806391dd734614610101578063c7b8e15d1461012e575b600080fd5b34801561006657600080fd5b5061008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100b757600080fd5b5061008e610143565b6100d36100ce366004611476565b610165565b6040519081526020016100a2565b3480156100ed57600080fd5b506100d36100fc3660046114eb565b610279565b34801561010d57600080fd5b5061012161011c36600461152b565b61041e565b6040516100a291906115ed565b34801561013a57600080fd5b5061008e610b4b565b610162600173fffd8963efd1fc6a506488495d951d5263988d2661161d565b81565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166348c894916040518060a00160405280336001600160a01b03168152602001868152602001888152602001878152602001858152506040516020016101d69190611687565b6040516020818303038152906040526040518263ffffffff1660e01b815260040161020191906115ed565b6000604051808303816000875af1158015610220573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102489190810190611724565b80602001905181019061025b919061179b565b90504780156102705761027060003383610b5b565b50949350505050565b60008060405180606001604052808515158152602001848152602001856102be576102b9600173fffd8963efd1fc6a506488495d951d5263988d2661161d565b6102ce565b6102ce6401000276a360016117b4565b6001600160a01b03169052604080516060810182526001808252602080830191909152600082840181905283518181529182019093529293509190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166348c894916040518060a00160405280336001600160a01b031681526020018581526020018a8152602001868152602001848152506040516020016103799190611687565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016103a491906115ed565b6000604051808303816000875af11580156103c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103eb9190810190611724565b8060200190518101906103fe919061179b565b93504780156104135761041360003383610b5b565b505050509392505050565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461045557600080fd5b6000610463838501856117d4565b905060008061047f836040015160000151846000015130610bfb565b925092505060008061049e856040015160200151866000015130610bfb565b9250925050826000146104f85760405162461bcd60e51b815260206004820152601e60248201527f64656c74614265666f726530206973206e6f7420657175616c20746f2030000060448201526064015b60405180910390fd5b80156105465760405162461bcd60e51b815260206004820152601e60248201527f64656c74614265666f726531206973206e6f7420657175616c20746f2030000060448201526064016104ef565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f3cd914c8760400151886060015189608001516040518463ffffffff1660e01b81526004016105a49392919061188d565b6020604051808303816000875af11580156105c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e7919061179b565b9050600080610603886040015160000151896000015130610bfb565b92509250506000806106228a60400151602001518b6000015130610bfb565b92509250508389146106935760405162461bcd60e51b815260206004820152603460248201527f706f6f6c42616c616e63654265666f726530206973206e6f7420657175616c206044820152730746f20706f6f6c42616c616e63654166746572360641b60648201526084016104ef565b8187146106ff5760405162461bcd60e51b815260206004820152603460248201527f706f6f6c42616c616e63654265666f726531206973206e6f7420657175616c20604482015273746f20706f6f6c42616c616e636541667465723160601b60648201526084016104ef565b60608a015151156108225760008a606001516020015112156107a15789606001516020015183146107425760405162461bcd60e51b81526004016104ef906118df565b6000811361079c5760405162461bcd60e51b815260206004820152602160248201527f64656c7461416674657231206973206e6f742067726561746572207468616e206044820152600360fc1b60648201526084016104ef565b61092b565b600083126107fb5760405162461bcd60e51b815260206004820152602160248201527f64656c7461416674657230206973206e6f74206c657373207468616e207a65726044820152606f60f81b60648201526084016104ef565b896060015160200151811461079c5760405162461bcd60e51b81526004016104ef90611936565b60008a606001516020015112156108b457896060015160200151811461085a5760405162461bcd60e51b81526004016104ef90611936565b6000831361079c5760405162461bcd60e51b815260206004820152602160248201527f64656c7461416674657230206973206e6f742067726561746572207468616e206044820152600360fc1b60648201526084016104ef565b600081126109045760405162461bcd60e51b815260206004820152601e60248201527f64656c7461416674657231206973206e6f74206c657373207468616e2030000060448201526064016104ef565b896060015160200151831461092b5760405162461bcd60e51b81526004016104ef906118df565b60008312156109fc57896020015160400151156109dc5760408a810151519051636a256b2960e01b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690636a256b29906024016020604051808303816000875af11580156109b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d6919061179b565b506109fc565b6109fc8a60400151600001518b60000151858d6020015160200151610ce9565b6000811215610ad05789602001516040015115610ab05760408a810151602001519051636a256b2960e01b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690636a256b29906024016020604051808303816000875af1158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa919061179b565b50610ad0565b610ad08a60400151602001518b60000151838d6020015160200151610ce9565b6000831315610af45760408a0151518a5160208c015151610af49291908690611014565b6000811315610b1d57610b1d8a60400151602001518b60000151838d6020015160000151611014565b6040805160208101879052016040516020818303038152906040529a50505050505050505050505b92915050565b6101626401000276a360016117b4565b60006001600160a01b038416610b9a5760008060008085875af1905080610b9557604051633d2cec6f60e21b815260040160405180910390fd5b610bf5565b60405163a9059cbb60e01b6000528360045282602452602060006044600080895af13d15601f3d1160016000511416171691506000606052806040525080610bf557604051633c9fd93960e21b815260040160405180910390fd5b50505050565b60008080610c126001600160a01b0387168661118d565b9250610c476001600160a01b0387167f000000000000000000000000000000000000000000000000000000000000000061118d565b60405163a54b283160e01b81526001600160a01b03868116600483015288811660248301529193507f00000000000000000000000000000000000000000000000000000000000000009091169063a54b283190604401602060405180830381865afa158015610cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cde919061179b565b905093509350939050565b600082600f0b12610d3c5760405162461bcd60e51b815260206004820152601c60248201527f616d6f756e74206973206e6f74206c657373207468616e207a65726f0000000060448201526064016104ef565b8015610f4c576001600160a01b038416610e04576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636a256b29610d888461198d565b6040516001600160e01b031960e084901b1681526001600160a01b03881660048201526001600160801b03919091169060240160206040518083038185885af1158015610dd9573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610dfe919061179b565b50610bf5565b6001600160a01b0384166323b872dd847f0000000000000000000000000000000000000000000000000000000000000000610e3e8661198d565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526001600160801b031660448201526064016020604051808303816000875af1158015610e9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebf91906119bc565b50604051636a256b2960e01b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636a256b29906024016020604051808303816000875af1158015610f28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfe919061179b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f5298aca84610f95876001600160a01b03166001600160a01b031690565b610f9e8661198d565b6040516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091526001600160801b031660448201526064015b600060405180830381600087803b158015610ff657600080fd5b505af115801561100a573d6000803e3d6000fd5b5050505050505050565b600082600f0b136110675760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e74206973206e6f742067726561746572207468616e207a65726f0060448201526064016104ef565b801561110457604051630b0d9c0960e01b81526001600160a01b03858116600483015284811660248301526001600160801b03841660448301527f00000000000000000000000000000000000000000000000000000000000000001690630b0d9c0990606401600060405180830381600087803b1580156110e757600080fd5b505af11580156110fb573d6000803e3d6000fd5b50505050610bf5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663156e29f68461114d876001600160a01b03166001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526001600160801b0385166044820152606401610fdc565b60006001600160a01b0383166111ae57506001600160a01b03811631610b45565b6040516370a0823160e01b81526001600160a01b0383811660048301528416906370a0823190602401602060405180830381865afa1580156111f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611218919061179b565b9050610b45565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156112585761125861121f565b60405290565b6040516060810167ffffffffffffffff811182821017156112585761125861121f565b604051601f8201601f1916810167ffffffffffffffff811182821017156112aa576112aa61121f565b604052919050565b6001600160a01b03811681146112c757600080fd5b50565b600060a082840312156112dc57600080fd5b6112e4611235565b905081356112f1816112b2565b81526020820135611301816112b2565b6020820152604082013562ffffff8116811461131c57600080fd5b60408201526060820135600281900b811461133657600080fd5b60608201526080820135611349816112b2565b608082015292915050565b80151581146112c757600080fd5b60006060828403121561137457600080fd5b61137c61125e565b9050813561138981611354565b81526020828101359082015260408201356113a3816112b2565b604082015292915050565b6000606082840312156113c057600080fd5b6113c861125e565b905081356113d581611354565b815260208201356113e581611354565b602082015260408201356113a381611354565b600067ffffffffffffffff8211156114125761141261121f565b50601f01601f191660200190565b600082601f83011261143157600080fd5b813561144461143f826113f8565b611281565b81815284602083860101111561145957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080610180858703121561148d57600080fd5b61149786866112ca565b93506114a68660a08701611362565b92506114b68661010087016113ae565b915061016085013567ffffffffffffffff8111156114d357600080fd5b6114df87828801611420565b91505092959194509250565b600080600060e0848603121561150057600080fd5b61150a85856112ca565b925060a084013561151a81611354565b9295929450505060c0919091013590565b6000806020838503121561153e57600080fd5b823567ffffffffffffffff8082111561155657600080fd5b818501915085601f83011261156a57600080fd5b81358181111561157957600080fd5b86602082850101111561158b57600080fd5b60209290920196919550909350505050565b60005b838110156115b85781810151838201526020016115a0565b50506000910152565b600081518084526115d981602086016020860161159d565b601f01601f19169290920160200192915050565b60208152600061160060208301846115c1565b9392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0382811682821603908082111561163d5761163d611607565b5092915050565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff169084015260608083015160020b9084015260809182015116910152565b602080825282516001600160a01b03168282015282810151805115156040808501919091529181015115156060840152810151151560808301528201516000906116d460a0840182611644565b506060830151805115156101408401526020810151610160840152604001516001600160a01b031661018083015260808301516101a08084015261171c6101c08401826115c1565b949350505050565b60006020828403121561173657600080fd5b815167ffffffffffffffff81111561174d57600080fd5b8201601f8101841361175e57600080fd5b805161176c61143f826113f8565b81815285602083850101111561178157600080fd5b61179282602083016020860161159d565b95945050505050565b6000602082840312156117ad57600080fd5b5051919050565b6001600160a01b0381811683821601908082111561163d5761163d611607565b6000602082840312156117e657600080fd5b813567ffffffffffffffff808211156117fe57600080fd5b908301906101a0828603121561181357600080fd5b61181b611235565b8235611826816112b2565b815261183586602085016113ae565b602082015261184786608085016112ca565b604082015261185a866101208501611362565b60608201526101808301358281111561187257600080fd5b61187e87828601611420565b60808301525095945050505050565b600061012061189c8387611644565b8451151560a0840152602085015160c084015260408501516001600160a01b031660e0840152806101008401526118d5818401856115c1565b9695505050505050565b60208082526037908201527f64656c7461416674657230206973206e6f7420657175616c20746f20646174616040820152760b9c185c985b5ccb985b5bdd5b9d14dc1958da599a5959604a1b606082015260800190565b60208082526037908201527f64656c7461416674657231206973206e6f7420657175616c20746f20646174616040820152760b9c185c985b5ccb985b5bdd5b9d14dc1958da599a5959604a1b606082015260800190565b600081600f0b6f7fffffffffffffffffffffffffffffff1981036119b3576119b3611607565b60000392915050565b6000602082840312156119ce57600080fd5b81516116008161135456fea2646970667358221220ed48c0fd9d05af49ed506176045f38e283ec4af22b9c5c168b98a5d48fd6a28264736f6c63430008130033";

type CustomSwapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomSwapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomSwapRouter__factory extends ContractFactory {
  constructor(...args: CustomSwapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_manager, overrides || {});
  }
  override deploy(
    _manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_manager, overrides || {}) as Promise<
      CustomSwapRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CustomSwapRouter__factory {
    return super.connect(runner) as CustomSwapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomSwapRouterInterface {
    return new Interface(_abi) as CustomSwapRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CustomSwapRouter {
    return new Contract(address, _abi, runner) as unknown as CustomSwapRouter;
  }
}
