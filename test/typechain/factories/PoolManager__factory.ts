/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PoolManager, PoolManagerInterface } from "../PoolManager";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "controllerGasLimit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "MAX_TICK_SPACING",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "int24",
        internalType: "int24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_PROTOCOL_FEE_DENOMINATOR",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_TICK_SPACING",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "int24",
        internalType: "int24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collectProtocolFees",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountCollected",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "currencyDelta",
    inputs: [
      {
        name: "caller",
        type: "address",
        internalType: "address",
      },
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
    ],
    outputs: [
      {
        name: "currencyDelta",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "donate",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "amount0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "hookData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "delta",
        type: "int256",
        internalType: "BalanceDelta",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "extsload",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "value",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "extsload",
    inputs: [
      {
        name: "startSlot",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "nSlots",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLiquidity",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
    ],
    outputs: [
      {
        name: "liquidity",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLiquidity",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "PoolId",
      },
    ],
    outputs: [
      {
        name: "liquidity",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNonzeroDeltaCount",
    inputs: [],
    outputs: [
      {
        name: "_nonzeroDeltaCount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPoolBitmapInfo",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "word",
        type: "int16",
        internalType: "int16",
      },
    ],
    outputs: [
      {
        name: "tickBitmap",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPoolTickInfo",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "tick",
        type: "int24",
        internalType: "int24",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Pool.TickInfo",
        components: [
          {
            name: "liquidityGross",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "liquidityNet",
            type: "int128",
            internalType: "int128",
          },
          {
            name: "feeGrowthOutside0X128",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "feeGrowthOutside1X128",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPosition",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
    ],
    outputs: [
      {
        name: "position",
        type: "tuple",
        internalType: "struct Position.Info",
        components: [
          {
            name: "liquidity",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "feeGrowthInside0LastX128",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "feeGrowthInside1LastX128",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSlot0",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "PoolId",
      },
    ],
    outputs: [
      {
        name: "sqrtPriceX96",
        type: "uint160",
        internalType: "uint160",
      },
      {
        name: "tick",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "protocolFee",
        type: "uint16",
        internalType: "uint16",
      },
      {
        name: "swapFee",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "sqrtPriceX96",
        type: "uint160",
        internalType: "uint160",
      },
      {
        name: "hookData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "tick",
        type: "int24",
        internalType: "int24",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isOperator",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isUnlocked",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "modifyLiquidity",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "params",
        type: "tuple",
        internalType: "struct IPoolManager.ModifyLiquidityParams",
        components: [
          {
            name: "tickLower",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "tickUpper",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "liquidityDelta",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
      {
        name: "hookData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "delta",
        type: "int256",
        internalType: "BalanceDelta",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pools",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "PoolId",
      },
    ],
    outputs: [
      {
        name: "slot0",
        type: "tuple",
        internalType: "struct Pool.Slot0",
        components: [
          {
            name: "sqrtPriceX96",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "tick",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "protocolFee",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "swapFee",
            type: "uint24",
            internalType: "uint24",
          },
        ],
      },
      {
        name: "feeGrowthGlobal0X128",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "feeGrowthGlobal1X128",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "liquidity",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "protocolFeeController",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IProtocolFeeController",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "protocolFeesAccrued",
    inputs: [
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "reservesOf",
    inputs: [
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOwner",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setProtocolFee",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setProtocolFeeController",
    inputs: [
      {
        name: "controller",
        type: "address",
        internalType: "contract IProtocolFeeController",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "settle",
    inputs: [
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
    ],
    outputs: [
      {
        name: "paid",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "swap",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "params",
        type: "tuple",
        internalType: "struct IPoolManager.SwapParams",
        components: [
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "amountSpecified",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "sqrtPriceLimitX96",
            type: "uint160",
            internalType: "uint160",
          },
        ],
      },
      {
        name: "hookData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "delta",
        type: "int256",
        internalType: "BalanceDelta",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "take",
    inputs: [
      {
        name: "currency",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unlock",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateDynamicSwapFee",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "newDynamicSwapFee",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialize",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "currency0",
        type: "address",
        indexed: true,
        internalType: "Currency",
      },
      {
        name: "currency1",
        type: "address",
        indexed: true,
        internalType: "Currency",
      },
      {
        name: "fee",
        type: "uint24",
        indexed: false,
        internalType: "uint24",
      },
      {
        name: "tickSpacing",
        type: "int24",
        indexed: false,
        internalType: "int24",
      },
      {
        name: "hooks",
        type: "address",
        indexed: false,
        internalType: "contract IHooks",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ModifyLiquidity",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tickLower",
        type: "int24",
        indexed: false,
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        indexed: false,
        internalType: "int24",
      },
      {
        name: "liquidityDelta",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorSet",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnerChanged",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProtocolFeeControllerUpdated",
    inputs: [
      {
        name: "protocolFeeController",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProtocolFeeUpdated",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "protocolFee",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Swap",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "PoolId",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount0",
        type: "int128",
        indexed: false,
        internalType: "int128",
      },
      {
        name: "amount1",
        type: "int128",
        indexed: false,
        internalType: "int128",
      },
      {
        name: "sqrtPriceX96",
        type: "uint160",
        indexed: false,
        internalType: "uint160",
      },
      {
        name: "liquidity",
        type: "uint128",
        indexed: false,
        internalType: "uint128",
      },
      {
        name: "tick",
        type: "int24",
        indexed: false,
        internalType: "int24",
      },
      {
        name: "fee",
        type: "uint24",
        indexed: false,
        internalType: "uint24",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyUnlocked",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotUpdateEmptyPosition",
    inputs: [],
  },
  {
    type: "error",
    name: "CurrenciesOutOfOrderOrEqual",
    inputs: [],
  },
  {
    type: "error",
    name: "CurrencyNotSettled",
    inputs: [],
  },
  {
    type: "error",
    name: "DelegateCallNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC20TransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedHookCall",
    inputs: [],
  },
  {
    type: "error",
    name: "FeeNotDynamic",
    inputs: [],
  },
  {
    type: "error",
    name: "FeeTooLarge",
    inputs: [],
  },
  {
    type: "error",
    name: "HookAddressNotValid",
    inputs: [
      {
        name: "hooks",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidCaller",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidHookResponse",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidPrice",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidPriceOrLiquidity",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSqrtRatio",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidTick",
    inputs: [],
  },
  {
    type: "error",
    name: "ManagerLocked",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "NoLiquidityToReceiveFees",
    inputs: [],
  },
  {
    type: "error",
    name: "NotEnoughLiquidity",
    inputs: [],
  },
  {
    type: "error",
    name: "PoolAlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "PoolNotInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "PoolNotInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "PriceLimitAlreadyExceeded",
    inputs: [
      {
        name: "sqrtPriceCurrentX96",
        type: "uint160",
        internalType: "uint160",
      },
      {
        name: "sqrtPriceLimitX96",
        type: "uint160",
        internalType: "uint160",
      },
    ],
  },
  {
    type: "error",
    name: "PriceLimitOutOfBounds",
    inputs: [
      {
        name: "sqrtPriceLimitX96",
        type: "uint160",
        internalType: "uint160",
      },
    ],
  },
  {
    type: "error",
    name: "PriceOverflow",
    inputs: [],
  },
  {
    type: "error",
    name: "ProtocolFeeCannotBeFetched",
    inputs: [],
  },
  {
    type: "error",
    name: "ProtocolFeeControllerCallFailedOrInvalidResult",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeCastOverflow",
    inputs: [],
  },
  {
    type: "error",
    name: "SwapAmountCannotBeZero",
    inputs: [],
  },
  {
    type: "error",
    name: "TickLiquidityOverflow",
    inputs: [
      {
        name: "tick",
        type: "int24",
        internalType: "int24",
      },
    ],
  },
  {
    type: "error",
    name: "TickLowerOutOfBounds",
    inputs: [
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
    ],
  },
  {
    type: "error",
    name: "TickMisaligned",
    inputs: [
      {
        name: "tick",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickSpacing",
        type: "int24",
        internalType: "int24",
      },
    ],
  },
  {
    type: "error",
    name: "TickSpacingTooLarge",
    inputs: [],
  },
  {
    type: "error",
    name: "TickSpacingTooSmall",
    inputs: [],
  },
  {
    type: "error",
    name: "TickUpperOutOfBounds",
    inputs: [
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
    ],
  },
  {
    type: "error",
    name: "TicksMisordered",
    inputs: [
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
    ],
  },
  {
    type: "error",
    name: "UnauthorizedDynamicSwapFeeUpdate",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200571e3803806200571e833981016040819052620000349162000081565b600080546001600160a01b0319163390811782556040518392907fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c908290a3608052503060a0526200009b565b6000602082840312156200009457600080fd5b5051919050565b60805160a051615656620000c86000396000611b6e0152600081816120c1015261211901526156566000f3fe6080604052600436106102455760003560e01c80636a256b2911610139578063b02375ce116100b6578063db8171871161007a578063db81718714610957578063f02de3b21461096c578063f3cd914c1461098c578063f5298aca146109ac578063fa6793d5146109cc578063fe99049a14610a0557600080fd5b8063b02375ce1461072a578063b5217bb41461074a578063b6363cf214610841578063bec999dd1461087c578063c815641c1461089c57600080fd5b80638da5cb5b116100fd5780638da5cb5b1461064057806393c85a211461067857806397e8cd4e146106a5578063a412b9d8146106d2578063a54b2831146106f257600080fd5b80636a256b29146105b15780637c352ef6146105c45780638161b874146105e45780638380edb71461060457806384e41c5e1461061957600080fd5b80632d771389116101c7578063558a72971161018b578063558a7297146104be578063598af9e7146104de5780635aa208a41461051c57806360460f061461057b578063695c5bf51461059157600080fd5b80632d771389146103f957806333aa955b1461041957806335fd631a14610451578063426a84931461047e57806348c894911461049e57600080fd5b80630b0d9c091161020e5780630b0d9c091461035857806313af40351461037a578063156e29f61461039a5780631e2eaeaf146103ba578063234266d7146103d957600080fd5b8062fdd58e1461024a57806301ffc9a714610295578063048d9c70146102c557806307eff0dd14610310578063095bcdb614610338575b600080fd5b34801561025657600080fd5b506102826102653660046149b7565b600460209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156102a157600080fd5b506102b56102b03660046149f9565b610a25565b604051901515815260200161028c565b3480156102d157600080fd5b506102e56102e0366004614a28565b610a5c565b6040805182516001600160801b0316815260208084015190820152918101519082015260600161028c565b34801561031c57600080fd5b50610325600181565b60405160029190910b815260200161028c565b34801561034457600080fd5b506102b5610353366004614a77565b610adc565b34801561036457600080fd5b50610378610373366004614aac565b610b86565b005b34801561038657600080fd5b50610378610395366004614aed565b610c2c565b3480156103a657600080fd5b506103786103b5366004614a77565b610cb2565b3480156103c657600080fd5b506102826103d5366004614b0a565b5490565b3480156103e557600080fd5b506102826103f4366004614c56565b610cff565b34801561040557600080fd5b50610378610414366004614aed565b610db3565b34801561042557600080fd5b50610439610434366004614a28565b610e32565b6040516001600160801b03909116815260200161028c565b34801561045d57600080fd5b5061047161046c366004614cc0565b610e62565b60405161028c9190614d06565b34801561048a57600080fd5b506102b5610499366004614a77565b610ee2565b3480156104aa57600080fd5b506104716104b9366004614d39565b610f47565b3480156104ca57600080fd5b506102b56104d9366004614d8b565b61104d565b3480156104ea57600080fd5b506102826104f9366004614aac565b600560209081526000938452604080852082529284528284209052825290205481565b34801561052857600080fd5b5061053c610537366004614dc0565b6110bd565b60405161028c919081516001600160801b03168152602080830151600f0b90820152604080830151908201526060918201519181019190915260800190565b34801561058757600080fd5b50610325617fff81565b34801561059d57600080fd5b506103256105ac366004614de3565b61115b565b6102826105bf366004614aed565b61135c565b3480156105d057600080fd5b506102826105df366004614e47565b611407565b3480156105f057600080fd5b506102826105ff366004614aac565b61142d565b34801561061057600080fd5b506102b56114c8565b34801561062557600080fd5b5061062e600481565b60405160ff909116815260200161028c565b34801561064c57600080fd5b50600054610660906001600160a01b031681565b6040516001600160a01b03909116815260200161028c565b34801561068457600080fd5b50610282610693366004614aed565b60076020526000908152604090205481565b3480156106b157600080fd5b506102826106c0366004614aed565b60016020526000908152604090205481565b3480156106de57600080fd5b506103786106ed366004614e7d565b6114e5565b3480156106fe57600080fd5b5061028261070d366004614ea8565b600660209081526000928352604080842090915290825290205481565b34801561073657600080fd5b50610378610745366004614ed6565b611563565b34801561075657600080fd5b506107df610765366004614b0a565b600860209081526000918252604091829020825160808101845281546001600160a01b0381168252600160a01b8104600290810b94830194909452600160b81b810461ffff1694820194909452600160c81b90930462ffffff1660608401526001810154918101546003909101546001600160801b031684565b6040805185516001600160a01b0316815260208087015160020b908201528582015161ffff169181019190915260609485015162ffffff1694810194909452608084019290925260a08301526001600160801b031660c082015260e00161028c565b34801561084d57600080fd5b506102b561085c366004614ea8565b600360209081526000928352604080842090915290825290205460ff1681565b34801561088857600080fd5b50610282610897366004614ef2565b6115f6565b3480156108a857600080fd5b5061091c6108b7366004614b0a565b600090815260086020908152604091829020825160808101845290546001600160a01b038116808352600160a01b820460020b938301849052600160b81b820461ffff16948301859052600160c81b90910462ffffff16606090920182905293919291565b604080516001600160a01b03909516855260029390930b602085015261ffff9091169183019190915262ffffff16606082015260800161028c565b34801561096357600080fd5b50610282611759565b34801561097857600080fd5b50600254610660906001600160a01b031681565b34801561099857600080fd5b506102826109a7366004614f77565b611771565b3480156109b857600080fd5b506103786109c7366004614a77565b611953565b3480156109d857600080fd5b506104396109e7366004614b0a565b6000908152600860205260409020600301546001600160801b031690565b348015610a1157600080fd5b506102b5610a20366004614ffe565b6119a0565b60006301ffc9a760e01b6001600160e01b031983161480610a565750630f632fb360e01b6001600160e01b03198316145b92915050565b610a89604051806060016040528060006001600160801b0316815260200160008152602001600081525090565b6000858152600860205260409020610aa690600601858585611b06565b6040805160608101825282546001600160801b03168152600183015460208201526002909201549082015290505b949350505050565b336000908152600460209081526040808320858452909152812080548391908390610b0890849061505a565b90915550506001600160a01b038416600090815260046020908152604080832086845290915281208054849290610b4090849061506d565b909155505060408051338082526020820185905285926001600160a01b038816926000805160206155c183398151915291015b60405180910390a45060015b9392505050565b610b8e611b63565b6000805160206155e183398151915254610bbb576040516354e3ca0d60e01b815260040160405180910390fd5b610bd683610bc883611bae565b610bd190615080565b611bdc565b6001600160a01b03831615610c13576001600160a01b03831660009081526007602052604081208054839290610c0d90849061505a565b90915550505b610c276001600160a01b0384168383611c9b565b505050565b6000546001600160a01b03163314610c57576040516348f5c3ed60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516939216917fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c91a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b610cba611b63565b6000805160206155e183398151915254610ce7576040516354e3ca0d60e01b815260040160405180910390fd5b610cf482610bc883611bae565b610c27838383611d3b565b6000610d09611b63565b6000805160206155e183398151915254610d36576040516354e3ca0d60e01b815260040160405180910390fd5b6000610d4187611db0565b9050610d4c81611de0565b6080870151610d68906001600160a01b03168888888888611e18565b6000818152600860205260409020610d81908787611e98565b9150610d8d8783611f6c565b6080870151610da9906001600160a01b03168888888888611f8f565b5095945050505050565b6000546001600160a01b03163314610dde576040516348f5c3ed60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527fb4bd8ef53df690b9943d3318996006dbb82a25f54719d8c8035b516a2a5b8acc9060200160405180910390a150565b6000848152600860205260408120610e4f90600601858585611b06565b546001600160801b031695945050505050565b60606000610e718360206150a6565b67ffffffffffffffff811115610e8957610e89614b23565b6040519080825280601f01601f191660200182016040528015610eb3576020820181803683370190505b50905060005b83811015610eda578085015460206001830102830152600181019050610eb9565b509392505050565b3360008181526005602090815260408083206001600160a01b03881680855290835281842087855290925280832085905551919285927fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a790610b739087815260200190565b6060610f5f6000805160206155e18339815191525490565b15610f7d576040516328486b6360e11b815260040160405180910390fd5b610f9460016000805160206155e183398151915255565b6040516348eeb9a360e11b815233906391dd734690610fb990869086906004016150e6565b6000604051808303816000875af1158015610fd8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261100091908101906150fa565b90506110186000805160206156018339815191525490565b1561103657604051635212cba160e01b815260040160405180910390fd5b610a5660006000805160206155e183398151915255565b3360008181526003602090815260408083206001600160a01b038716808552908352818420805460ff191687151590811790915591519182529293917fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267910160405180910390a350600192915050565b604080516080808201835260008083526020808401829052838501829052606080850183905287835260088252858320865180860188528481528084018590528088018590528201849052600288810b855260049091018352928690208651948501875280546001600160801b0381168652600160801b9004600f0b9285019290925260018201549584019590955201549281019290925290610b7f565b6000617fff60010b60020b856060015160020b131561118d57604051635815aee160e11b815260040160405180910390fd5b600160020b856060015160020b12156111b957604051630b7f3b4b60e11b815260040160405180910390fd5b845160208601516001600160a01b039081169116106111eb5760405163eaa6c6eb60e01b815260040160405180910390fd5b61120f856040015186608001516001600160a01b0316611fc590919063ffffffff16565b611242576080850151604051630732d7b560e51b81526001600160a01b0390911660048201526024015b60405180910390fd5b6000611256866040015162ffffff1661200b565b6080870151909150611274906001600160a01b031687878787612030565b600061127f87611db0565b9050600061128c886120a9565b60008481526008602052604090209092506112aa9150888386612230565b60808901519094506112c9906001600160a01b03168989878a8a6122f7565b87602001516001600160a01b031688600001516001600160a01b0316837f3fd553db44f207b1f41348cfc4d251860814af9eadc470e8e7895e4d120511f48b604001518c606001518d608001516040516113499392919062ffffff93909316835260029190910b60208301526001600160a01b0316604082015260600190565b60405180910390a4505050949350505050565b6000611366611b63565b6000805160206155e183398151915254611393576040516354e3ca0d60e01b815260040160405180910390fd5b6001600160a01b0382166113a85750346113f5565b6001600160a01b038216600081815260076020526040902054906113cb90612329565b6001600160a01b03841660009081526007602052604090208190556113f190829061505a565b9150505b61140282610bd183611bae565b919050565b6000828152600860209081526040808320600185900b8452600501909152812054610b7f565b6002546000906001600160a01b0316331461145b576040516348f5c3ed60e01b815260040160405180910390fd5b81156114675781611481565b6001600160a01b0383166000908152600160205260409020545b6001600160a01b0384166000908152600160205260408120805492935083929091906114ae90849061505a565b90915550610b7f90506001600160a01b0384168583611c9b565b60006114e06000805160206155e18339815191525490565b905090565b604082015162800000161580611511575081608001516001600160a01b0316336001600160a01b031614155b1561152f5760405163854b0b8560e01b815260040160405180910390fd5b61153d8162ffffff166123a8565b600061154883611db0565b6000818152600860205260409020909150610c2790836123d0565b60008061156f836120a9565b91509150816115915760405163e7ca185f60e01b815260040160405180910390fd5b600061159c84611db0565b60008181526008602052604090209091506115b79083612417565b60405161ffff8316815281907f9f9496a7bce5dc5951d2db4c6bac380c9bcbcc9a4e9c18eafbcc231d06de481a9060200160405180910390a250505050565b6000611600611b63565b6000805160206155e18339815191525461162d576040516354e3ca0d60e01b815260040160405180910390fd5b600061163886611db0565b905061164381611de0565b608086015161165e906001600160a01b03168787878761245c565b6116c96040518060a00160405280336001600160a01b03168152602001876000015160020b8152602001876020015160020b81526020016116a288604001516124ee565b600f0b8152606089015160020b602091820152600084815260089091526040902090612513565b91506116d58683611f6c565b845160208601516040808801519051339385937f541c041c2cce48e614b3de043c9280f06b6164c0a1741649e2de3c3d375f79749361172c93600293840b81529190920b6020820152604081019190915260600190565b60405180910390a36080860151611750906001600160a01b03168787858888612927565b50949350505050565b60006114e06000805160206156018339815191525490565b600061177b611b63565b6000805160206155e1833981519152546117a8576040516354e3ca0d60e01b815260040160405180910390fd5b60006117b386611db0565b90506117be81611de0565b60808601516117d9906001600160a01b0316878787876129bd565b6000806117e4614957565b61184760405180608001604052808b6060015160020b81526020018a60000151151581526020018a6020015181526020018a604001516001600160a01b0316815250600860008781526020019081526020016000206129f190919063ffffffff16565b9297509094509250905061185b8986611f6c565b821561189d5782600160008a60000151611879578b6020015161187c565b8b515b6001600160a01b031681526020810191909152604001600020805490910190555b33847f40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f6118ca8860801c90565b60408581015160a0808801516060808a01518551600f97880b8152968f900b60208801526001600160a01b03909416868601526001600160801b039091169085015260029190910b608084015262ffffff881690830152519081900360c00190a36080890151611947906001600160a01b03168a8a888b8b61316e565b50505050949350505050565b61195b611b63565b6000805160206155e183398151915254611988576040516354e3ca0d60e01b815260040160405180910390fd5b61199582610bd183611bae565b610c278383836131a4565b6000336001600160a01b038616148015906119df57506001600160a01b038516600090815260036020908152604080832033845290915290205460ff16155b15611a52576001600160a01b038516600090815260056020908152604080832033845282528083208684529091529020546000198114611a5057611a23838261505a565b6001600160a01b038716600090815260056020908152604080832033845282528083208884529091529020555b505b6001600160a01b038516600090815260046020908152604080832086845290915281208054849290611a8590849061505a565b90915550506001600160a01b038416600090815260046020908152604080832086845290915281208054849290611abd90849061506d565b9091555050604080513381526020810184905284916001600160a01b0380881692908916916000805160206155c1833981519152910160405180910390a4506001949350505050565b6040805160609490941b6bffffffffffffffffffffffff191660208086019190915260e893841b60348601529190921b60378401528151601a818503018152603a9093018252825192810192909220600090815292909152902090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611bac576040516306c4a1c760e11b815260040160405180910390fd5b565b600060016001607f1b03821115611bd8576040516393dafdf160e01b815260040160405180910390fd5b5090565b80600f0b600003611beb575050565b3360009081526006602090815260408083206001600160a01b038616845290915281205490611c1e600f84900b8361519c565b905080600003611c4957611c446000805160206156018339815191528054600019019055565b611c6c565b81600003611c6c57611c6c60008051602061560183398151915280546001019055565b3360009081526006602090815260408083206001600160a01b0397909716835295905293909320929092555050565b60006001600160a01b038416611cda5760008060008085875af1905080611cd557604051633d2cec6f60e21b815260040160405180910390fd5b611d35565b60405163a9059cbb60e01b6000528360045282602452602060006044600080895af13d15601f3d1160016000511416171691506000606052806040525080611d3557604051633c9fd93960e21b815260040160405180910390fd5b50505050565b6001600160a01b038316600090815260046020908152604080832085845290915281208054839290611d6e90849061506d565b9091555050604080513381526020810183905283916001600160a01b038616916000916000805160206155c183398151915291015b60405180910390a4505050565b600081604051602001611dc39190615207565b604051602081830303815290604052805190602001209050919050565b6000818152600860205260409020546001600160a01b0316611e155760405163486aa30760e01b815260040160405180910390fd5b50565b6080850151600160971b1615611e9057611e9063b6a8b0fa60e01b338787878787604051602401611e4e96959493929190615215565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526001600160a01b03881690613266565b505050505050565b60038301546000906001600160801b03168103611ec85760405163a74f97ab60e01b815260040160405180910390fd5b611f02611ed484611bae565b611edd90615080565b611ee684611bae565b611eef90615080565b6001600160801b031660809190911b1790565b90508215611f35576003840154611f29908490600160801b906001600160801b03166132ab565b60018501805490910190555b8115610b7f576003840154611f5a908390600160801b906001600160801b03166132ab565b60028501805490910190559392505050565b8151611f7c90610bd18360801c90565b611f8b8260200151610bd18390565b5050565b6080850151600160961b1615611e9057611e9063e1b4af6960e01b338787878787604051602401611e4e96959493929190615215565b60006001600160a01b03831615611fff57600160961b836001600160a01b0316101580611ffa57506280000082161515610b7f565b610b7f565b50628000001615919050565b60006280000082161561202057506000919050565b50627fffff8116611402816123a8565b6001609f1b8516156120a2576120a2633440d82060e01b3386868686604051602401612060959493929190615253565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526001600160a01b03871690613266565b5050505050565b60025460009081906001600160a01b03161561222b577f00000000000000000000000000000000000000000000000000000000000000005a101561210057604051630f724b8160e11b815260040160405180910390fd5b60025460405160009182916001600160a01b03909116907f00000000000000000000000000000000000000000000000000000000000000009063553bfc3760e01b90612150908990602401615207565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161218e919061529b565b60006040518083038160008787f1925050503d80600081146121cc576040519150601f19603f3d011682016040523d82523d6000602084013e6121d1565b606091505b50915091508115806121e4575060208151115b156121f6575060009485945092505050565b602081015161ffff81168114801561221257506122128161334d565b61221e57600080612222565b6001815b90955093505050505b915091565b83546000906001600160a01b03161561225c57604051637983c05160e01b815260040160405180910390fd5b612265846133bf565b604080516080810182526001600160a01b0396909616808752600283900b602088015261ffff9590951690860181905262ffffff938416606090960186905286546001600160b81b031916909417600160a01b938216939093029290921764ffffffffff60b81b1916600160b81b90930262ffffff60c81b191692909217600160c81b90930292909217909255919050565b6001609e1b861615611e9057611e9063a910f80f60e01b338787878787604051602401611e4e969594939291906152b7565b60006001600160a01b038216612340575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015612384573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5691906152fe565b620f424062ffffff821610611e1557604051637e2df70960e11b815260040160405180910390fd5b81546001600160a01b03166123f85760405163486aa30760e01b815260040160405180910390fd5b815462ffffff909116600160c81b0262ffffff60c81b19909116179055565b81546001600160a01b031661243f5760405163486aa30760e01b815260040160405180910390fd5b815461ffff909116600160b81b0261ffff60b81b19909116179055565b60008360400151138015612479575060808401516001609d1b1615155b156124a7576124a263a6ab2a4360e01b3386868686604051602401612060959493929190615317565b6120a2565b60008360400151131580156124c5575060808401516001609b1b1615155b156120a2576120a2632b58404e60e01b3386868686604051602401612060959493929190615317565b80600f81900b8114611402576040516393dafdf160e01b815260040160405180910390fd5b6000612527826020015183604001516136c5565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905281906060850151600f0b156126aa5761257c86866020015187606001516000613761565b6001600160801b0316602083015215158152604085015160608601516125a59188916001613761565b6001600160801b031660608084019190915290151560408301528501516000600f9190910b13156126695760006125df866080015161383b565b9050806001600160801b031682602001516001600160801b0316111561262457602086015160405163b8e3c38560e01b815260029190910b6004820152602401611239565b806001600160801b031682606001516001600160801b0316111561266757604080870151905163b8e3c38560e01b815260029190910b6004820152602401611239565b505b8051156126885760208501516080860151612688916005890191613869565b8060400151156126aa57604085015160808601516126aa916005890191613869565b6126bd8686602001518760400151613908565b60a083018190526080830182905260608701518751602089015160408a01516126f9959394926126f19260068e0192611b06565b9291906139bf565b809350819450505060008560600151600f0b12156127765780511561274557612745868660200151600290810b6000908152600490920160205260408220828155600181018390550155565b80604001511561277657604080860151600290810b6000908152600489016020529182208281556001810183905501555b506060840151600f0b156129005760208401518554600291820b600160a01b90910490910b12156127e0576127d96127d36127ce6127b78760200151613ae8565b6127c48860400151613ae8565b8860600151613e0b565b6124ee565b60801b90565b9250612900565b60408401518554600291820b600160a01b90910490910b12156128ce578454604085015161284e91612823916127ce916001600160a01b0316906127c490613ae8565b611eef6127ce6128368860200151613ae8565b895460608a01516001600160a01b0390911690613e42565b925060008460600151600f0b12612881576060840151600386015461287c91906001600160801b031661536d565b6128a7565b836060015161288f90615080565b60038601546128a791906001600160801b0316615394565b6003860180546001600160801b0319166001600160801b0392909216919091179055612900565b6128fd6000611eef6127ce6128e68860200151613ae8565b6128f38960400151613ae8565b8960600151613e42565b92505b61291e8361291961291085611bae565b611eef85611bae565b613e71565b95945050505050565b60008460400151138015612944575060808501516001609c1b1615155b156129745761296f63b505b4ce60e01b338787878787604051602401611e4e969594939291906153b4565b611e90565b6000846040015113158015612992575060808501516001609a1b1615155b15611e9057611e9063c3d5d4e660e01b338787878787604051602401611e4e969594939291906153b4565b6080840151600160991b16156120a2576120a263575e24b460e01b3386868686604051602401612060959493929190615411565b60008060006129fe614957565b8460400151600003612a235760405163be8b850760e01b815260040160405180910390fd5b6040805160808101825287546001600160a01b0381168252600160a01b810460020b602080840191909152600160b81b820461ffff1693830193909352600160c81b900462ffffff1660608201819052918701519193509015612b255780600001516001600160a01b031686606001516001600160a01b031610612ad45780516060870151604051637c9c6e8f60e01b81526001600160a01b03928316600482015291166024820152604401611239565b6401000276a36001600160a01b031686606001516001600160a01b031611612b20576060860151604051639e4d7cc760e01b81526001600160a01b039091166004820152602401611239565b612bd4565b80600001516001600160a01b031686606001516001600160a01b031611612b795780516060870151604051637c9c6e8f60e01b81526001600160a01b03928316600482015291166024820152604401611239565b73fffd8963efd1fc6a506488495d951d5263988d266001600160a01b031686606001516001600160a01b031610612bd4576060860151604051639e4d7cc760e01b81526001600160a01b039091166004820152602401611239565b6040805180820190915260038801546001600160801b0316815260208781015160009291820190612c11576008846040015161ffff16901c612c23565b6101008460400151612c239190615471565b60ff16815250905060008088604001511290506040518060c00160405280896040015181526020016000815260200184600001516001600160a01b03168152602001846020015160020b81526020018960200151612c85578a60020154612c8b565b8a600101545b815283516001600160801b03166020918201526040805160e0810182526000808252928101839052908101829052606081018290526080810182905260a0810182905260c08101919091529094505b845115801590612d04575088606001516001600160a01b031685604001516001600160a01b031614155b1561305f5760408501516001600160a01b031681526060850151895160208b0151612d359260058e01929091613e9e565b1515604083015260020b60208201819052620d89e7191315612d6057620d89e7196020820152612d94565b612d6d620d89e719615492565b60020b816020015160020b1315612d9457612d8b620d89e719615492565b60020b60208201525b612da18160200151613ae8565b6001600160a01b03166060820152604085015160208a0151612e239190612de4578a606001516001600160a01b031683606001516001600160a01b031611612e02565b8a606001516001600160a01b031683606001516001600160a01b0316105b612e10578260600151612e16565b8a606001515b60a088015188518a613fe0565b60c085015260a084015260808301526001600160a01b031660408601528115612e8557612e598160c001518260800151016141cb565b855101855260a0810151612e6c906141cb565b8560200151612e7b919061519c565b6020860152612ec8565b612e928160a001516141cb565b855103855260c08101516080820151612eb391612eae9161506d565b6141cb565b8560200151612ec291906154ab565b60208601525b602083015160ff1615612f00576000836020015160ff168260c00151612eee91906154cb565b60c08301805182900390529790970196505b60a08501516001600160801b031615612f3f57612f338160c00151600160801b8760a001516001600160801b03166132ab565b60808601805190910190525b80606001516001600160a01b031685604001516001600160a01b03160361302c57806040015115613003576000612fab8b83602001518c60200151612f88578d60010154612f8e565b88608001515b8d60200151612fa15789608001516141f5565b8e600201546141f5565b9050896020015115612fbb576000035b600081600f0b12612fdb57808660a00151612fd6919061536d565b612ff3565b612fe481615080565b8660a00151612ff39190615394565b6001600160801b031660a0870152505b886020015161301657806020015161301f565b60018160200151035b60020b6060860152612cda565b80600001516001600160a01b031685604001516001600160a01b03161461305a5761301f85604001516133bf565b612cda565b604085015160608601518b546001600160b81b031916600160a01b62ffffff909216919091026001600160a01b031916176001600160a01b03909116178a5560a085015183516001600160801b039182169116146130de5760a085015160038b0180546001600160801b0319166001600160801b039092169190911790555b8860200151156130f757608085015160018b0155613102565b608085015160028b01555b811515896020015115150361313b5761313461312786600001518b60400151036124ee565b611eef87602001516124ee565b9750613161565b61315e61314b86602001516124ee565b611eef87600001518c60400151036124ee565b97505b5050505092959194509250565b6080850151600160981b1615611e9057611e9063b47b2fb160e01b338787878787604051602401611e4e969594939291906154df565b336001600160a01b03841681148015906131e457506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff16155b1561325b576001600160a01b03808516600090815260056020908152604080832093851683529281528282208683529052205460001981146132595761322a838261505a565b6001600160a01b0380871660009081526005602090815260408083209387168352928152828220888352905220555b505b611d35848484614231565b600080613273848461429d565b91509150816001600160e01b031916816001600160e01b03191614611d3557604051631e048e1d60e01b815260040160405180910390fd5b600083830281600019858709828110838203039150508084116132cd57600080fd5b806000036132e057508290049050610b7f565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600061ffff8216156133b757600061336761010084615471565b905060ff600884901c1661ffff8216158015906133885750600461ffff8316105b806133a5575061ffff8116158015906133a55750600461ffff8216105b156133b4575060009392505050565b50505b506001919050565b60006401000276a36001600160a01b03831610806133fa575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156134185760405163015680db60e11b815260040160405180910390fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c979088119617909417909217179091171717608081106134ac57607f810383901c91506134b6565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b146136b657886001600160a01b031661369b82613ae8565b6001600160a01b031611156136b057816136b8565b806136b8565b815b9998505050505050505050565b8060020b8260020b126136f95760405163c4433ed560e01b8152600283810b600483015282900b6024820152604401611239565b620d89e719600283900b12156137285760405163d5e2f7ab60e01b8152600283900b6004820152602401611239565b613735620d89e719615492565b60020b8160020b1315611f8b5760405163035aeeff60e31b8152600282900b6004820152602401611239565b600283900b6000908152600485016020526040812080548291906001600160801b0381169060801c600f87900b84136137a35761379e878361536d565b6137b6565b6137ac87615080565b6137b69083615394565b6001600160801b0380821615908416801591909114159650909450600003613804578854600160a01b9004600290810b9089900b13613804576001808a0154908401556002808a0154908401555b60008661381a576138158883615529565b613824565b6138248883615556565b90508060801b851784555050505094509492505050565b6000621b13d08201600290810b9083900b6001600160801b0302816138625761386261545b565b0492915050565b8060020b8260020b8161387e5761387e61545b565b0760020b156138ae57604051636a6c79f360e11b8152600283810b600483015282900b6024820152604401611239565b6000806138dc8360020b8560020b816138c9576138c961545b565b0560020b600881901d9161010090910790565b600191820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600282810b600081815260048601602052604080822085850b835290822087549294859492939192600160a01b909204900b908112156139615781600101548360010154039450816002015483600201540393506139b4565b8560020b8160020b1261398d5782600101548260010154039450826002015482600201540393506139b4565b81600101548360010154896001015403039450816002015483600201548960020154030393505b505050935093915050565b6040805160608101825285546001600160801b0316815260018601546020820152600286015491810191909152600090819081600f87900b8103613a305781516001600160801b0316600003613a2857604051632bbfae4960e21b815260040160405180910390fd5b508051613a65565b600087600f0b12613a4d578151613a4890889061536d565b613a62565b613a5687615080565b8251613a629190615394565b90505b613a878260200151870383600001516001600160801b0316600160801b6132ab565b9350613aab8260400151860383600001516001600160801b0316600160801b6132ab565b925086600f0b600014613ad25787546001600160801b0319166001600160801b0382161788555b5050600186019390935560029094015591929050565b60008060008360020b12613aff578260020b613b07565b8260020b6000035b9050620d89e8811115613b2d576040516333a3bdff60e21b815260040160405180910390fd5b600081600116600003613b4457600160801b613b56565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613b8a576ffff97272373d413259a46990580e213a0260801c5b6004821615613ba9576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613bc8576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613be7576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613c06576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613c25576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613c44576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613c64576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613c84576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613ca4576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613cc4576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613ce4576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613d04576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613d24576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613d44576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613d65576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613d85576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613da4576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613dc1576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613de2578060001981613dde57613dde61545b565b0490505b640100000000810615613df6576001613df9565b60005b60ff16602082901c0192505050919050565b60008082600f0b12613e2f57613e27612eae8585856001614336565b600003610ad4565b610ad4612eae8585856000036000614336565b60008082600f0b12613e5e57613e27612eae8585856001614403565b610ad4612eae8585856000036000614403565b6000610b7f613e808360801c90565b613e8a8560801c90565b613e949190615529565b611eef8486615529565b60008060008460020b8660020b81613eb857613eb861545b565b05905060008660020b128015613ee557508460020b8660020b81613ede57613ede61545b565b0760020b15155b15613eef57600019015b8315613f6357600281900b600881901d600181810b600090815260208b9052604090205461010090930760ff81169190911b80016000190192831680151595509192909185613f4557888360ff16860302613f58565b88613f4f82614481565b840360ff168603025b965050505050613fd6565b600181810160020b600881901d80830b600090815260208b9052604090205461010090920760ff81169390931b600019011991821680151595509092919085613fb957888360ff0360ff16866001010102613fcf565b8883613fc483614521565b0360ff168660010101025b9650505050505b5094509492505050565b60008080806001600160a01b03808916908a161015818712801561406757600061401b8960000389620f42400362ffffff16620f42406132ab565b9050826140345761402f8c8c8c6001614403565b614041565b6140418b8d8c6001614336565b9550858110614052578a9650614061565b61405e8c8b838661460b565b96505b506140ab565b8161407e576140798b8b8b6000614336565b61408b565b61408b8a8c8b6000614403565b935083881061409c578995506140ab565b6140a88b8a8a85614667565b95505b6001600160a01b038a811690871614821561410e578080156140ca5750815b6140e0576140db878d8c6001614336565b6140e2565b855b95508080156140ef575081155b61410557614100878d8c6000614403565b614107565b845b9450614158565b8080156141185750815b61412e576141298c888c6001614403565b614130565b855b955080801561413d575081155b6141535761414e8c888c6000614336565b614155565b845b94505b8115801561416557508885115b1561416e578894505b81801561418d57508a6001600160a01b0316876001600160a01b031614155b1561419f5785896000030393506141bc565b6141b9868962ffffff168a620f42400362ffffff166146c3565b93505b50505095509550955095915050565b60006001600160ff1b03821115611bd8576040516393dafdf160e01b815260040160405180910390fd5b600292830b600090815260049094016020526040909320600181018054909203909155908101805490920390915554600160801b9004600f0b90565b6001600160a01b03831660009081526004602090815260408083208584529091528120805483929061426490849061505a565b9091555050604080513381526020810183905283916000916001600160a01b038716916000805160206155c18339815191529101611da3565b60008060208301519150600080856001600160a01b0316856040516142c2919061529b565b6000604051808303816000865af19150503d80600081146142ff576040519150601f19603f3d011682016040523d82523d6000602084013e614304565b606091505b5091509150816143175761431781614703565b8080602001905181019061432b9190615583565b925050509250929050565b6000836001600160a01b0316856001600160a01b03161115614356579293925b600160601b600160e01b03606084901b166001600160a01b0386860381169087166000036143965760405162bfc92160e01b815260040160405180910390fd5b836143cc57866001600160a01b03166143b98383896001600160a01b03166132ab565b816143c6576143c661545b565b046143f8565b6143f86143e38383896001600160a01b03166146c3565b886001600160a01b0316808204910615150190565b979650505050505050565b6000836001600160a01b0316856001600160a01b03161115614423579293925b81614457576144526001600160801b03841661443f87876155a0565b6001600160a01b0316600160601b6132ab565b61291e565b61291e6001600160801b03841661446e87876155a0565b6001600160a01b0316600160601b6146c3565b600080821161448f57600080fd5b600160801b82106144a257608091821c91015b6801000000000000000082106144ba57604091821c91015b64010000000082106144ce57602091821c91015b6201000082106144e057601091821c91015b61010082106144f157600891821c91015b6010821061450157600491821c91015b6004821061451157600291821c91015b6002821061140257600101919050565b600080821161452f57600080fd5b5060ff6001600160801b0382161561454a57607f1901614552565b608082901c91505b67ffffffffffffffff82161561456b57603f1901614573565b604082901c91505b63ffffffff82161561458857601f1901614590565b602082901c91505b61ffff8216156145a357600f19016145ab565b601082901c91505b60ff8216156145bd57600719016145c5565b600882901c91505b600f8216156145d757600319016145df565b600482901c91505b60038216156145f157600119016145f9565b600282901c91505b60018216156114025760001901919050565b60006001600160a01b038516158061462a57506001600160801b038416155b15614648576040516309e48c3760e31b815260040160405180910390fd5b8161465a57614452858585600161472d565b61291e8585856001614827565b60006001600160a01b038516158061468657506001600160801b038416155b156146a4576040516309e48c3760e31b815260040160405180910390fd5b816146b6576144528585856000614827565b61291e858585600061472d565b60006146d08484846132ab565b9050600082806146e2576146e261545b565b8486091115610b7f5760001981106146f957600080fd5b6001019392505050565b8051600003614725576040516336bc48c560e01b815260040160405180910390fd5b805181602001fd5b6000811561479f5760006001600160a01b038411156147635761475e84600160601b876001600160801b03166132ab565b61477a565b61477a6001600160801b038616606086901b6154cb565b9050614797614792826001600160a01b03891661506d565b61492d565b915050610ad4565b60006001600160a01b038411156147cd576147c884600160601b876001600160801b03166146c3565b6147ea565b6147ea606085901b6001600160801b038716808204910615150190565b905080866001600160a01b03161161481557604051634323a55560e01b815260040160405180910390fd5b6001600160a01b038616039050610ad4565b600082600003614838575083610ad4565b600160601b600160e01b03606085901b1682156148ca576001600160a01b0386168481029085828161486c5761486c61545b565b040361489c5781810182811061489a5761489083896001600160a01b0316836146c3565b9350505050610ad4565b505b5061479781856148b56001600160a01b038a16836154cb565b6148bf919061506d565b808204910615150190565b6001600160a01b038616848102908582816148e7576148e761545b565b041415806148f55750808211155b156149135760405163f5c787f160e01b815260040160405180910390fd5b808203614890614792846001600160a01b038b16846146c3565b806001600160a01b0381168114611402576040516393dafdf160e01b815260040160405180910390fd5b6040518060c00160405280600081526020016000815260200160006001600160a01b03168152602001600060020b81526020016000815260200160006001600160801b031681525090565b6001600160a01b0381168114611e1557600080fd5b600080604083850312156149ca57600080fd5b82356149d5816149a2565b946020939093013593505050565b6001600160e01b031981168114611e1557600080fd5b600060208284031215614a0b57600080fd5b8135610b7f816149e3565b8035600281900b811461140257600080fd5b60008060008060808587031215614a3e57600080fd5b843593506020850135614a50816149a2565b9250614a5e60408601614a16565b9150614a6c60608601614a16565b905092959194509250565b600080600060608486031215614a8c57600080fd5b8335614a97816149a2565b95602085013595506040909401359392505050565b600080600060608486031215614ac157600080fd5b8335614acc816149a2565b92506020840135614adc816149a2565b929592945050506040919091013590565b600060208284031215614aff57600080fd5b8135610b7f816149a2565b600060208284031215614b1c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715614b5c57614b5c614b23565b60405290565b803562ffffff8116811461140257600080fd5b600060a08284031215614b8757600080fd5b60405160a0810181811067ffffffffffffffff82111715614baa57614baa614b23565b6040529050808235614bbb816149a2565b81526020830135614bcb816149a2565b6020820152614bdc60408401614b62565b6040820152614bed60608401614a16565b60608201526080830135614c00816149a2565b6080919091015292915050565b60008083601f840112614c1f57600080fd5b50813567ffffffffffffffff811115614c3757600080fd5b602083019150836020828501011115614c4f57600080fd5b9250929050565b60008060008060006101008688031215614c6f57600080fd5b614c798787614b75565b945060a0860135935060c0860135925060e086013567ffffffffffffffff811115614ca357600080fd5b614caf88828901614c0d565b969995985093965092949392505050565b60008060408385031215614cd357600080fd5b50508035926020909101359150565b60005b83811015614cfd578181015183820152602001614ce5565b50506000910152565b6020815260008251806020840152614d25816040850160208701614ce2565b601f01601f19169190910160400192915050565b60008060208385031215614d4c57600080fd5b823567ffffffffffffffff811115614d6357600080fd5b614d6f85828601614c0d565b90969095509350505050565b8035801515811461140257600080fd5b60008060408385031215614d9e57600080fd5b8235614da9816149a2565b9150614db760208401614d7b565b90509250929050565b60008060408385031215614dd357600080fd5b82359150614db760208401614a16565b60008060008060e08587031215614df957600080fd5b614e038686614b75565b935060a0850135614e13816149a2565b925060c085013567ffffffffffffffff811115614e2f57600080fd5b614e3b87828801614c0d565b95989497509550505050565b60008060408385031215614e5a57600080fd5b8235915060208301358060010b8114614e7257600080fd5b809150509250929050565b60008060c08385031215614e9057600080fd5b614e9a8484614b75565b9150614db760a08401614b62565b60008060408385031215614ebb57600080fd5b8235614ec6816149a2565b91506020830135614e72816149a2565b600060a08284031215614ee857600080fd5b610b7f8383614b75565b600080600080848603610120811215614f0a57600080fd5b614f148787614b75565b94506060609f1982011215614f2857600080fd5b50614f31614b39565b614f3d60a08701614a16565b8152614f4b60c08701614a16565b602082015260e08601356040820152925061010085013567ffffffffffffffff811115614e2f57600080fd5b600080600080848603610120811215614f8f57600080fd5b614f998787614b75565b94506060609f1982011215614fad57600080fd5b50614fb6614b39565b614fc260a08701614d7b565b815260c0860135602082015260e0860135614fdc816149a2565b6040820152925061010085013567ffffffffffffffff811115614e2f57600080fd5b6000806000806080858703121561501457600080fd5b843561501f816149a2565b9350602085013561502f816149a2565b93969395505050506040820135916060013590565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a5657610a56615044565b80820180821115610a5657610a56615044565b600081600f0b60016001607f1b0319810361509d5761509d615044565b60000392915050565b8082028115828204841417610a5657610a56615044565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610ad46020830184866150bd565b60006020828403121561510c57600080fd5b815167ffffffffffffffff8082111561512457600080fd5b818401915084601f83011261513857600080fd5b81518181111561514a5761514a614b23565b604051601f8201601f19908116603f0116810190838211818310171561517257615172614b23565b8160405282815287602084870101111561518b57600080fd5b6143f8836020830160208801614ce2565b80820182811260008312801582168215821617156151bc576151bc615044565b505092915050565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff169084015260608083015160020b9084015260809182015116910152565b60a08101610a5682846151c4565b6001600160a01b0387168152600061012061523360208401896151c4565b8660c08401528560e0840152806101008401526136b881840185876150bd565b6001600160a01b0386811682526000906101009061527460208501896151c4565b861660c084015260e0830181905261528f81840185876150bd565b98975050505050505050565b600082516152ad818460208701614ce2565b9190910192915050565b6001600160a01b038781168252600090610120906152d8602085018a6151c4565b80881660c0850152508560020b60e0840152806101008401526136b881840185876150bd565b60006020828403121561531057600080fd5b5051919050565b6001600160a01b0386168152600061014061533560208401886151c4565b8551600290810b60c08501526020870151900b60e084015260408601516101008401525b8061012084015261528f81840185876150bd565b6001600160801b0381811683821601908082111561538d5761538d615044565b5092915050565b6001600160801b0382811682821603908082111561538d5761538d615044565b6001600160a01b038716815260006101606153d260208401896151c4565b8651600290810b60c08501526020880151900b60e084015260408701516101008401525b85610120840152806101408401526136b881840185876150bd565b6001600160a01b0386168152600061014061542f60208401886151c4565b8551151560c0840152602086015160e084015260408601516001600160a01b0316610100840152615359565b634e487b7160e01b600052601260045260246000fd5b600061ffff808416806154865761548661545b565b92169190910692915050565b60008160020b627fffff19810361509d5761509d615044565b818103600083128015838313168383128216171561538d5761538d615044565b6000826154da576154da61545b565b500490565b6001600160a01b038716815260006101606154fd60208401896151c4565b8651151560c0840152602087015160e084015260408701516001600160a01b03166101008401526153f6565b600f81810b9083900b0160016001607f1b03811360016001607f1b031982121715610a5657610a56615044565b600f82810b9082900b0360016001607f1b0319811260016001607f1b0382131715610a5657610a56615044565b60006020828403121561559557600080fd5b8151610b7f816149e3565b6001600160a01b0382811682821603908082111561538d5761538d61504456fe1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac728859c090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab237d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0ba26469706673582212204355b99807e48cc3f807e362d1d8afa25f8ce9211bf61927ba4af29988bb258564736f6c63430008130033";

type PoolManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    controllerGasLimit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(controllerGasLimit, overrides || {});
  }
  override deploy(
    controllerGasLimit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(controllerGasLimit, overrides || {}) as Promise<
      PoolManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PoolManager__factory {
    return super.connect(runner) as PoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new Interface(_abi) as PoolManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PoolManager {
    return new Contract(address, _abi, runner) as unknown as PoolManager;
  }
}
