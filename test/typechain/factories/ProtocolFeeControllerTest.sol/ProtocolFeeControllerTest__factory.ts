/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProtocolFeeControllerTest,
  ProtocolFeeControllerTestInterface,
} from "../../ProtocolFeeControllerTest.sol/ProtocolFeeControllerTest";

const _abi = [
  {
    type: "function",
    name: "protocolFeeForPool",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setSwapFeeForPool",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "fee",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapFeeForPool",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "PoolId",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102da806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806308b3dfd614610046578063553bfc37146100815780639d24676114610094575b600080fd5b61006a610054366004610167565b60006020819052908152604090205461ffff1681565b60405161ffff909116815260200160405180910390f35b61006a61008f3660046101cd565b6100c8565b6100c66100a236600461026d565b600091825260208290526040909120805461ffff191661ffff909216919091179055565b005b60008060006100d6846100f1565b815260208101919091526040016000205461ffff1692915050565b60008160405160200161014a919081516001600160a01b03908116825260208084015182169083015260408084015162ffffff169083015260608084015160020b90830152608092830151169181019190915260a00190565b604051602081830303815290604052805190602001209050919050565b60006020828403121561017957600080fd5b5035919050565b6001600160a01b038116811461019557600080fd5b50565b80356101a381610180565b919050565b803562ffffff811681146101a357600080fd5b8035600281900b81146101a357600080fd5b600060a082840312156101df57600080fd5b60405160a0810181811067ffffffffffffffff8211171561021057634e487b7160e01b600052604160045260246000fd5b604052823561021e81610180565b8152602083013561022e81610180565b602082015261023f604084016101a8565b6040820152610250606084016101bb565b606082015261026160808401610198565b60808201529392505050565b6000806040838503121561028057600080fd5b82359150602083013561ffff8116811461029957600080fd5b80915050925092905056fea2646970667358221220ef4d4e16fe8a56054bdfc728b1474da09cf2a8471bff9166bac295a625aab27664736f6c63430008130033";

type ProtocolFeeControllerTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProtocolFeeControllerTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProtocolFeeControllerTest__factory extends ContractFactory {
  constructor(...args: ProtocolFeeControllerTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ProtocolFeeControllerTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ProtocolFeeControllerTest__factory {
    return super.connect(runner) as ProtocolFeeControllerTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolFeeControllerTestInterface {
    return new Interface(_abi) as ProtocolFeeControllerTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProtocolFeeControllerTest {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ProtocolFeeControllerTest;
  }
}
