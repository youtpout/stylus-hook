/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Redeploy, RedeployInterface } from "../Redeploy";

const _abi = [
  {
    type: "function",
    name: "deployDeterministic",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "predictDeterministicAddress",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "predicted",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101f8806100206000396000f3fe6080604052600436106100295760003560e01c8063360d0fad1461002e578063e919e3ea1461006a575b600080fd5b34801561003a57600080fd5b5061004e61004936600461018a565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e61007836600461018a565b6100e2565b6040513060388201526f5af43d82803e903d91602b57fd5bf3ff602482015260148101839052733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c820120607882015260556043909101206000905b90505b92915050565b60006100d983836000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166100dc5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b6000806040838503121561019d57600080fd5b82356001600160a01b03811681146101b457600080fd5b94602093909301359350505056fea26469706673582212204a8407edd9581aa394afa1ea03a4e9c637097aea70b3c8611968d097636897ef64736f6c63430008130033";

type RedeployConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedeployConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Redeploy__factory extends ContractFactory {
  constructor(...args: RedeployConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Redeploy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Redeploy__factory {
    return super.connect(runner) as Redeploy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedeployInterface {
    return new Interface(_abi) as RedeployInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Redeploy {
    return new Contract(address, _abi, runner) as unknown as Redeploy;
  }
}
