/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { LimitOrder, LimitOrderInterface } from "../LimitOrder";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_poolManager",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "afterAddLiquidity",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct IPoolManager.ModifyLiquidityParams",
        components: [
          {
            name: "tickLower",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "tickUpper",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "liquidityDelta",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
      {
        name: "",
        type: "int256",
        internalType: "BalanceDelta",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "afterDonate",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "afterInitialize",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
      {
        name: "tick",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "afterRemoveLiquidity",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct IPoolManager.ModifyLiquidityParams",
        components: [
          {
            name: "tickLower",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "tickUpper",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "liquidityDelta",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
      {
        name: "",
        type: "int256",
        internalType: "BalanceDelta",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "afterSwap",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "params",
        type: "tuple",
        internalType: "struct IPoolManager.SwapParams",
        components: [
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "amountSpecified",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "sqrtPriceLimitX96",
            type: "uint160",
            internalType: "uint160",
          },
        ],
      },
      {
        name: "",
        type: "int256",
        internalType: "BalanceDelta",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "beforeAddLiquidity",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct IPoolManager.ModifyLiquidityParams",
        components: [
          {
            name: "tickLower",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "tickUpper",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "liquidityDelta",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "beforeDonate",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "beforeInitialize",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "beforeRemoveLiquidity",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct IPoolManager.ModifyLiquidityParams",
        components: [
          {
            name: "tickLower",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "tickUpper",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "liquidityDelta",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "beforeSwap",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct IPoolManager.SwapParams",
        components: [
          {
            name: "zeroForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "amountSpecified",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "sqrtPriceLimitX96",
            type: "uint160",
            internalType: "uint160",
          },
        ],
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "epochInfos",
    inputs: [
      {
        name: "",
        type: "uint232",
        internalType: "Epoch",
      },
    ],
    outputs: [
      {
        name: "filled",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "currency0",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "currency1",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "token0Total",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token1Total",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "liquidityTotal",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "epochNext",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint232",
        internalType: "Epoch",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "epochs",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint232",
        internalType: "Epoch",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEpoch",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "zeroForOne",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint232",
        internalType: "Epoch",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEpochLiquidity",
    inputs: [
      {
        name: "epoch",
        type: "uint232",
        internalType: "Epoch",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getHookPermissions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Hooks.Permissions",
        components: [
          {
            name: "beforeInitialize",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "afterInitialize",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "beforeAddLiquidity",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "afterAddLiquidity",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "beforeRemoveLiquidity",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "afterRemoveLiquidity",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "beforeSwap",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "afterSwap",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "beforeDonate",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "afterDonate",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getTickLowerLast",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int24",
        internalType: "int24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "kill",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "zeroForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "amount0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lockAcquired",
    inputs: [
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lockAcquiredKill",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "liquidityDelta",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "removingAllLiquidity",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "amount0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount0Fee",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "amount1Fee",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lockAcquiredPlace",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "zeroForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "liquidityDelta",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lockAcquiredWithdraw",
    inputs: [
      {
        name: "currency0",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "currency1",
        type: "address",
        internalType: "Currency",
      },
      {
        name: "token0Amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token1Amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onERC1155Received",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "place",
    inputs: [
      {
        name: "key",
        type: "tuple",
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "zeroForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "liquidity",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "poolManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPoolManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tickLowerLasts",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "PoolId",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int24",
        internalType: "int24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "epoch",
        type: "uint232",
        internalType: "Epoch",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "amount0",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount1",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Fill",
    inputs: [
      {
        name: "epoch",
        type: "uint232",
        indexed: true,
        internalType: "Epoch",
      },
      {
        name: "key",
        type: "tuple",
        indexed: false,
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "tickLower",
        type: "int24",
        indexed: false,
        internalType: "int24",
      },
      {
        name: "zeroForOne",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Kill",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "epoch",
        type: "uint232",
        indexed: true,
        internalType: "Epoch",
      },
      {
        name: "key",
        type: "tuple",
        indexed: false,
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "tickLower",
        type: "int24",
        indexed: false,
        internalType: "int24",
      },
      {
        name: "zeroForOne",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "liquidity",
        type: "uint128",
        indexed: false,
        internalType: "uint128",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Place",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "epoch",
        type: "uint232",
        indexed: true,
        internalType: "Epoch",
      },
      {
        name: "key",
        type: "tuple",
        indexed: false,
        internalType: "struct PoolKey",
        components: [
          {
            name: "currency0",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "currency1",
            type: "address",
            internalType: "Currency",
          },
          {
            name: "fee",
            type: "uint24",
            internalType: "uint24",
          },
          {
            name: "tickSpacing",
            type: "int24",
            internalType: "int24",
          },
          {
            name: "hooks",
            type: "address",
            internalType: "contract IHooks",
          },
        ],
      },
      {
        name: "tickLower",
        type: "int24",
        indexed: false,
        internalType: "int24",
      },
      {
        name: "zeroForOne",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "liquidity",
        type: "uint128",
        indexed: false,
        internalType: "uint128",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Withdraw",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "epoch",
        type: "uint232",
        indexed: true,
        internalType: "Epoch",
      },
      {
        name: "liquidity",
        type: "uint128",
        indexed: false,
        internalType: "uint128",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CrossedRange",
    inputs: [],
  },
  {
    type: "error",
    name: "Filled",
    inputs: [],
  },
  {
    type: "error",
    name: "HookAddressNotValid",
    inputs: [
      {
        name: "hooks",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "HookNotImplemented",
    inputs: [],
  },
  {
    type: "error",
    name: "InRange",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidPool",
    inputs: [],
  },
  {
    type: "error",
    name: "LockFailure",
    inputs: [],
  },
  {
    type: "error",
    name: "NotFilled",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPoolManager",
    inputs: [],
  },
  {
    type: "error",
    name: "NotPoolManagerToken",
    inputs: [],
  },
  {
    type: "error",
    name: "NotSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroLiquidity",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052600180546001600160e81b031916811790553480156200002357600080fd5b50604051620034bb380380620034bb833981016040819052620000469162000240565b6001600160a01b038116608052806200005f3062000067565b505062000272565b62000110816200010a604080516101408082018352600080835260208084018290528385018290526060808501839052608080860184905260a080870185905260c080880186905260e0808901879052610100808a01889052610120998a018890528a519889018b528789526001968901879052998801879052938701869052918601859052850184905284018390528301529281018390529081019190915290565b62000113565b50565b805115156001609f1b831615151415806200013c5750602081015115156001609e1b8316151514155b80620001565750604081015115156001609d1b8316151514155b80620001705750606081015115156001609c1b8316151514155b806200018a5750608081015115156001609b1b8316151514155b80620001a4575060a081015115156001609a1b8316151514155b80620001be575060c08101511515600160991b8316151514155b80620001d8575060e08101511515600160981b8316151514155b80620001f357506101008101511515600160971b8316151514155b806200020e57506101208101511515600160961b8316151514155b156200023c57604051630732d7b560e51b81526001600160a01b038316600482015260240160405180910390fd5b5050565b6000602082840312156200025357600080fd5b81516001600160a01b03811681146200026b57600080fd5b9392505050565b6080516131706200034b60003960008181610531015281816105e5015281816106bf0152818161077b0152818161081a015281816108fb015281816109ab01528181610a7501528181610b3601528181610bac01528181610c6d01528181610d9c01528181610fa4015281816110f50152818161119c015281816112a901528181611346015281816116420152818161171e015281816117d6015281816118be01528181611a4e01528181611cf20152818161205b015281816120e6015281816121280152818161222501526122cf01526131706000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c8063a23c0c34116100f9578063c3d5d4e611610097578063cb37d85111610071578063cb37d85114610519578063dc4c90d31461052c578063e1b4af6914610444578063f23a6e611461056b57600080fd5b8063c3d5d4e614610436578063c4e833ce14610452578063c53b81aa146104f657600080fd5b8063ab6291fe116100d3578063ab6291fe14610403578063b47b2fb114610423578063b505b4ce14610436578063b6a8b0fa1461044457600080fd5b8063a23c0c34146103dd578063a6ab2a43146101f3578063a910f80f146103f057600080fd5b80634907c68e11610166578063624f723c11610140578063624f723c146102d25780637d9248a814610373578063977e65aa146103865780639b9da824146103a757600080fd5b80634907c68e14610297578063575e24b4146101f35780635aaff517146102bf57600080fd5b80622f79f6146101ad5780632b58404e146101f3578063323b5ae71461021f5780633440d8201461023257806334eb074214610240578063365df6b314610282575b600080fd5b6101d66101bb366004612366565b6002602052600090815260409020546001600160e81b031681565b6040516001600160e81b0390911681526020015b60405180910390f35b61020661020136600461240a565b61057e565b6040516001600160e01b031990911681526020016101ea565b6001546101d6906001600160e81b031681565b610206610201366004612486565b61025361024e366004612502565b610599565b6040805194855260208501939093526001600160801b03918216928401929092521660608201526080016101ea565b61029561029036600461256b565b610a4d565b005b6102aa6102a53660046125bc565b610ce2565b604080519283526020830191909152016101ea565b6102956102cd366004612618565b610f80565b61032f6102e036600461268f565b60036020819052600091825260409091208054600182015460028301549383015460049093015460ff8316946101009093046001600160a01b039081169492169291906001600160801b031686565b6040805196151587526001600160a01b0395861660208801529390941692850192909252606084015260808301526001600160801b031660a082015260c0016101ea565b6101d661038136600461276d565b6113ef565b6103996103943660046127b7565b611443565b6040519081526020016101ea565b6103ca6103b5366004612366565b60009081526020819052604090205460020b90565b60405160029190910b81526020016101ea565b6102aa6103eb3660046127b7565b611483565b6102066103fe3660046127ee565b611711565b61041661041136600461287d565b6117c9565b6040516101ea919061290f565b610206610431366004612922565b6118b1565b610206610201366004612922565b61020661020136600461298a565b604080516101408082018352600080835260208084018290528385018290526060808501839052608080860184905260a080870185905260c080880186905260e0808901879052610100808a01889052610120998a018890528a519889018b52878952600196890187905299880187905293870186905291860185905285018490528401839052830152928101839052908101919091526040516101ea91906129e9565b6103ca610504366004612366565b60006020819052908152604090205460020b81565b610295610527366004612aa1565b6119ea565b6105537f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101ea565b610206610579366004612afe565b611ce5565b6000604051630a85dc2960e01b815260040160405180910390fd5b60008080803330146105be576040516314e1dbf760e11b815260040160405180910390fd5b60006105d060808b0160608c01612b5c565b6105da908a612b8f565b9050856108165760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bec999dd8c60405180606001604052808e60020b81526020018660020b81526020016000815250604051806020016040528060008152506040518463ffffffff1660e01b815260040161066393929190612c34565b6020604051808303816000875af1158015610682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a69190612c77565b905060006106b48260801c90565b600f0b131561076d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663156e29f63061070f8e60000160208101906107039190612c90565b6001600160a01b031690565b6107198560801c90565b9750876040518463ffffffff1660e01b815260040161073a93929190612cad565b600060405180830381600087803b15801561075457600080fd5b505af1158015610768573d6000803e3d6000fd5b505050505b600081600f0b1315610814577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663156e29f6306107bf8e60200160208101906107039190612c90565b849650866040518463ffffffff1660e01b81526004016107e193929190612cad565b600060405180830381600087803b1580156107fb57600080fd5b505af115801561080f573d6000803e3d6000fd5b505050505b505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bec999dd8c60405180606001604052808e60020b81526020018660020b81526020018d815250604051806020016040528060008152506040518463ffffffff1660e01b815260040161089793929190612c34565b6020604051808303816000875af11580156108b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108da9190612c77565b905060006108e88260801c90565b600f0b1315610995576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016630b0d9c0961092d60208e018e612c90565b8a6109388560801c90565b6001600160801b03169950896040518463ffffffff1660e01b815260040161096293929190612cd7565b600060405180830381600087803b15801561097c57600080fd5b505af1158015610990573d6000803e3d6000fd5b505050505b600081600f0b1315610a3f576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016630b0d9c096109e060408e0160208f01612c90565b8a846001600160801b03169850886040518463ffffffff1660e01b8152600401610a0c93929190612cd7565b600060405180830381600087803b158015610a2657600080fd5b505af1158015610a3a573d6000803e3d6000fd5b505050505b505095509550955095915050565b333014610a6d576040516314e1dbf760e11b815260040160405180910390fd5b8215610ba4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f5298aca30610abc886001600160a01b03166001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b158015610b0957600080fd5b505af1158015610b1d573d6000803e3d6000fd5b5050604051630b0d9c0960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250630b0d9c099150610b7190889085908890600401612cd7565b600060405180830381600087803b158015610b8b57600080fd5b505af1158015610b9f573d6000803e3d6000fd5b505050505b8115610cdb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f5298aca30610bf3876001600160a01b03166001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101859052606401600060405180830381600087803b158015610c4057600080fd5b505af1158015610c54573d6000803e3d6000fd5b5050604051630b0d9c0960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250630b0d9c099150610ca890879085908790600401612cd7565b600060405180830381600087803b158015610cc257600080fd5b505af1158015610cd6573d6000803e3d6000fd5b505050505b5050505050565b60008080610cff610cf836899003890189612cfb565b87876113ef565b6001600160e81b038116600090815260036020526040902080549192509060ff1615610d3e5760405163413e917360e11b815260040160405180910390fd5b3360009081526005820160205260408120546001600160801b031690819003610d7a57604051630200e8a960e31b815260040160405180910390fd5b336000908152600583016020526040812080546001600160801b0319169055807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166348c89491306334eb07428e8e610de36001600160801b038a16612d17565b8e8b60040160009054906101000a90046001600160801b03166001600160801b03168b6001600160801b031614604051602401610e24959493929190612d33565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519184901b6001600160e01b0319168252610e6c92509060040161290f565b6000604051808303816000875af1158015610e8b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610eb39190810190612d74565b806020019051810190610ec69190612e21565b600488018054949b5092995090945092508491600090610ef09084906001600160801b0316612e57565b82546001600160801b039182166101009390930a92830291909202199091161790555060028401805483019055600384018054820190556040516001600160e81b0386169033907f1fcdf3a63cf3db59982665c5a85b5b5d46a623a9216a89da970cbad511ff023590610f6a908f908f908f908a90612e7e565b60405180910390a3505050505094509492505050565b333014610fa0576040516314e1dbf760e11b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bec999dd8760405180606001604052808960020b81526020018a6060016020810190610ff99190612b5c565b611003908b612b8f565b60020b815260200187815250604051806020016040528060008152506040518463ffffffff1660e01b815260040161103d93929190612c34565b6020604051808303816000875af115801561105c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110809190612c77565b9050600061108e8260801c90565b600f0b121561123e5780600f0b156110b9576040516323ac68e760e01b815260040160405180910390fd5b836110d75760405163b319920d60e01b815260040160405180910390fd5b6110e46020870187612c90565b6001600160a01b03166323b872dd837f000000000000000000000000000000000000000000000000000000000000000061111e8560801c90565b61112790612eb4565b6001600160801b03166040518463ffffffff1660e01b815260040161114e93929190612cd7565b6020604051808303816000875af115801561116d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111919190612ee3565b506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636a256b296111ce6020890189612c90565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526024016020604051808303816000875af1158015611214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112389190612c77565b506113e7565b6112488160801c90565b600f0b15611269576040516323ac68e760e01b815260040160405180910390fd5b83156112885760405163b319920d60e01b815260040160405180910390fd5b6112986040870160208801612c90565b6001600160a01b03166323b872dd837f00000000000000000000000000000000000000000000000000000000000000006112d185612eb4565b6001600160801b03166040518463ffffffff1660e01b81526004016112f893929190612cd7565b6020604051808303816000875af1158015611317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133b9190612ee3565b506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636a256b2961137b6040890160208a01612c90565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526024016020604051808303816000875af11580156113c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e59190612c77565b505b505050505050565b60006002600085858560405160200161140a93929190612f43565b60408051601f19818403018152918152815160209283012083529082019290925201600020546001600160e81b031690505b9392505050565b6001600160e81b03821660009081526003602090815260408083206001600160a01b03851684526005019091529020546001600160801b03165b92915050565b6001600160e81b0382166000908152600360205260408120805482919060ff166114c0576040516306cb6fbf60e41b815260040160405180910390fd5b3360009081526005820160205260408120546001600160801b0316908190036114fc57604051630200e8a960e31b815260040160405180910390fd5b336000908152600583016020526040902080546001600160801b0319169055600482015460028301546001600160801b039182169161153e9190841683611d43565b94506115618360030154836001600160801b0316836001600160801b0316611d43565b9350848360020160008282546115779190612f6a565b92505081905550838360030160008282546115929190612f6a565b909155506115a290508282612e57565b600484810180546001600160801b03939093166001600160801b03199093169290921790915583546001850154604080516001600160a01b03610100909404841660248201529183166044830152606482018990526084820188905289831660a4808401919091528151808403909101815260c490920181526020820180516001600160e01b031663365df6b360e01b179052516348c8949160e01b81527f0000000000000000000000000000000000000000000000000000000000000000909216926348c894919261167692910161290f565b6000604051808303816000875af1158015611695573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116bd9190810190612d74565b506040516001600160801b03831681526001600160e81b0388169033907fcfd201c31748d4bd85efe95ceda3bac90f7fd44d075465d1624a5ce18bcf55889060200160405180910390a35050509250929050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461175c5760405163570c108560e11b815260040160405180910390fd5b6117b561177661177136899003890189612cfb565b611de5565b61178f8661178a60808b0160608c01612b5c565b611e15565b600091825260208290526040909120805462ffffff191662ffffff909216919091179055565b5063a910f80f60e01b5b9695505050505050565b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118145760405163570c108560e11b815260040160405180910390fd5b600080306001600160a01b03168585604051611831929190612f7d565b6000604051808303816000865af19150503d806000811461186e576040519150601f19603f3d011682016040523d82523d6000602084013e611873565b606091505b5091509150811561188757915061147d9050565b80516000036118a9576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118fc5760405163570c108560e11b815260040160405180910390fd5b6000808061192a611915611771368c90038c018c612cfb565b61192560808c0160608d01612b5c565b611e67565b9250925092508060020b8260020b1315611951575063b47b2fb160e01b92506117bf915050565b600061196060208a018a612f8d565b1590505b8160020b8360020b1361199d5761197c8a8483611ecc565b61198c60808b0160608c01612b5c565b6119969084612b8f565b9250611964565b6119d36119b2611771368d90038d018d612cfb565b6000908152602081905260409020805462ffffff191662ffffff8716179055565b5063b47b2fb160e01b9a9950505050505050505050565b6119fa60a0850160808601612c90565b6001600160a01b0381163014611a225760405162820f3560e61b815260040160405180910390fd5b816001600160801b0316600003611a4c57604051630200e8a960e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166348c89491306001600160a01b0316635aaff517888888886001600160801b031633604051602401611aac959493929190612faa565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519184901b6001600160e01b0319168252611af492509060040161290f565b6000604051808303816000875af1158015611b13573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b3b9190810190612d74565b50600080611b51610cf836899003890189612cfb565b90506001600160e81b038116611c2c57611b89611b7336899003890189612cfb565b6001546001600160e81b03169250878784611fda565b60016001600160e81b03821601600180546001600160e81b0319166001600160e81b03928316179055811660009081526003602090815260409091209250611bd390880188612c90565b82546001600160a01b039190911661010002610100600160a81b0319909116178255611c056040880160208901612c90565b6001830180546001600160a01b0319166001600160a01b0392909216919091179055611c47565b6001600160e81b038116600090815260036020526040902091505b6004820180546001600160801b03198082166001600160801b03928316880183161790925533600081815260058601602052604090819020805494851694841689019093169390931790915590516001600160e81b03831691907f4f0ea5e4591f78ece28e0e576ad3e8430e47ef23df32f6d4a04911558b5803f590611cd4908b908b908b908b90612e7e565b60405180910390a350505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d30576040516314fe96b960e21b815260040160405180910390fd5b5063f23a6e6160e01b9695505050505050565b60008383028160001985870982811083820303915050808411611d6557600080fd5b80600003611d785750829004905061143c565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600081604051602001611df89190612fe9565b604051602081830303815290604052805190602001209050919050565b600080611e22838561300d565b905060008460020b128015611e425750611e3c8385613047565b60020b15155b15611e555780611e5181613069565b9150505b611e5f838261308c565b949350505050565b6000806000611e7e611e7886612042565b85611e15565b600086815260208190526040902054909350600290810b9084900b811315611eb457611eaa8585612b8f565b9250809150611ec4565b915081611ec185856130ac565b91505b509250925092565b6000611ee7611ee036869003860186612cfb565b84846113ef565b90506001600160e81b03811615611fd4576001600160e81b0381166000908152600360205260408120805460ff1916600117815560048101549091908190611f449088908890611f3f906001600160801b0316612d17565b6120d8565b6002850180546001600160801b03938416908101909155600386018054929093169182019092559092509050611f8b611f8236899003890189612cfb565b87876000611fda565b836001600160e81b03167f315051c5c119908100a3f90ce0f119abf8a2b85f89378f72e13c7fe0dad56f6e888888604051611fc8939291906130d1565b60405180910390a25050505b50505050565b8060026000868686604051602001611ff493929190612f43565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a8154816001600160e81b0302191690836001600160e81b0316021790555050505050565b604051633205590760e21b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c815641c90602401608060405180830381865afa1580156120aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ce91906130df565b5090949350505050565b600080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146121245760405163570c108560e11b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bec999dd8760405180606001604052808960020b81526020018a606001602081019061217d9190612b5c565b612187908b612b8f565b60020b815260200188815250604051806020016040528060008152506040518463ffffffff1660e01b81526004016121c193929190612c34565b6020604051808303816000875af11580156121e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122049190612c77565b905060006122128260801c90565b600f0b13156122b9576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663156e29f63061225b61070360208b018b612c90565b6122658560801c90565b9650866040518463ffffffff1660e01b815260040161228693929190612cad565b600060405180830381600087803b1580156122a057600080fd5b505af11580156122b4573d6000803e3d6000fd5b505050505b600081600f0b131561235d576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663156e29f63061230861070360408b0160208c01612c90565b849550856040518463ffffffff1660e01b815260040161232a93929190612cad565b600060405180830381600087803b15801561234457600080fd5b505af1158015612358573d6000803e3d6000fd5b505050505b50935093915050565b60006020828403121561237857600080fd5b5035919050565b6001600160a01b038116811461239457600080fd5b50565b600060a082840312156123a957600080fd5b50919050565b6000606082840312156123a957600080fd5b60008083601f8401126123d357600080fd5b50813567ffffffffffffffff8111156123eb57600080fd5b60208301915083602082850101111561240357600080fd5b9250929050565b6000806000806000610140868803121561242357600080fd5b853561242e8161237f565b945061243d8760208801612397565b935061244c8760c088016123af565b925061012086013567ffffffffffffffff81111561246957600080fd5b612475888289016123c1565b969995985093965092949392505050565b6000806000806000610100868803121561249f57600080fd5b85356124aa8161237f565b94506124b98760208801612397565b935060c08601356124c98161237f565b925060e086013567ffffffffffffffff81111561246957600080fd5b8060020b811461239457600080fd5b801515811461239457600080fd5b6000806000806000610120868803121561251b57600080fd5b6125258787612397565b945060a0860135612535816124e5565b935060c0860135925060e086013561254c8161237f565b915061010086013561255d816124f4565b809150509295509295909350565b600080600080600060a0868803121561258357600080fd5b853561258e8161237f565b9450602086013561259e8161237f565b93506040860135925060608601359150608086013561255d8161237f565b60008060008061010085870312156125d357600080fd5b6125dd8686612397565b935060a08501356125ed816124e5565b925060c08501356125fd816124f4565b915060e085013561260d8161237f565b939692955090935050565b6000806000806000610120868803121561263157600080fd5b61263b8787612397565b945060a086013561264b816124e5565b935060c086013561265b816124f4565b925060e0860135915061010086013561255d8161237f565b80356001600160e81b038116811461268a57600080fd5b919050565b6000602082840312156126a157600080fd5b61143c82612673565b634e487b7160e01b600052604160045260246000fd5b62ffffff8116811461239457600080fd5b600060a082840312156126e357600080fd5b60405160a0810181811067ffffffffffffffff82111715612706576127066126aa565b60405290508082356127178161237f565b815260208301356127278161237f565b6020820152604083013561273a816126c0565b6040820152606083013561274d816124e5565b606082015260808301356127608161237f565b6080919091015292915050565b600080600060e0848603121561278257600080fd5b61278c85856126d1565b925060a084013561279c816124e5565b915060c08401356127ac816124f4565b809150509250925092565b600080604083850312156127ca57600080fd5b6127d383612673565b915060208301356127e38161237f565b809150509250929050565b600080600080600080610120878903121561280857600080fd5b86356128138161237f565b95506128228860208901612397565b945060c08701356128328161237f565b935060e0870135612842816124e5565b925061010087013567ffffffffffffffff81111561285f57600080fd5b61286b89828a016123c1565b979a9699509497509295939492505050565b6000806020838503121561289057600080fd5b823567ffffffffffffffff8111156128a757600080fd5b6128b3858286016123c1565b90969095509350505050565b60005b838110156128da5781810151838201526020016128c2565b50506000910152565b600081518084526128fb8160208601602086016128bf565b601f01601f19169290920160200192915050565b60208152600061143c60208301846128e3565b600080600080600080610160878903121561293c57600080fd5b86356129478161237f565b95506129568860208901612397565b94506129658860c089016123af565b9350610120870135925061014087013567ffffffffffffffff81111561285f57600080fd5b60008060008060008061012087890312156129a457600080fd5b86356129af8161237f565b95506129be8860208901612397565b945060c0870135935060e0870135925061010087013567ffffffffffffffff81111561285f57600080fd5b81511515815261014081016020830151612a07602084018215159052565b506040830151612a1b604084018215159052565b506060830151612a2f606084018215159052565b506080830151612a43608084018215159052565b5060a0830151612a5760a084018215159052565b5060c0830151612a6b60c084018215159052565b5060e0830151612a7f60e084018215159052565b5061010083810151151590830152610120928301511515929091019190915290565b6000806000806101008587031215612ab857600080fd5b612ac28686612397565b935060a0850135612ad2816124e5565b925060c0850135612ae2816124f4565b915060e08501356001600160801b038116811461260d57600080fd5b60008060008060008060a08789031215612b1757600080fd5b8635612b228161237f565b95506020870135612b328161237f565b94506040870135935060608701359250608087013567ffffffffffffffff81111561285f57600080fd5b600060208284031215612b6e57600080fd5b813561143c816124e5565b634e487b7160e01b600052601160045260246000fd5b600281810b9083900b01627fffff8113627fffff198212171561147d5761147d612b79565b8035612bbf8161237f565b6001600160a01b039081168352602082013590612bdb8261237f565b9081166020840152604082013590612bf2826126c0565b62ffffff8216604085015260608301359150612c0d826124e5565b8160020b606085015260808301359150612c268261237f565b808216608085015250505050565b6000610120612c438387612bb4565b845160020b60a0840152602085015160020b60c0840152604085015160e0840152806101008401526117bf818401856128e3565b600060208284031215612c8957600080fd5b5051919050565b600060208284031215612ca257600080fd5b813561143c8161237f565b6001600160a01b0393909316835260208301919091526001600160801b0316604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060a08284031215612d0d57600080fd5b61143c83836126d1565b6000600160ff1b8201612d2c57612d2c612b79565b5060000390565b6101208101612d428288612bb4565b60029590950b60a082015260c08101939093526001600160a01b039190911660e0830152151561010090910152919050565b600060208284031215612d8657600080fd5b815167ffffffffffffffff80821115612d9e57600080fd5b818401915084601f830112612db257600080fd5b815181811115612dc457612dc46126aa565b604051601f8201601f19908116603f01168101908382118183101715612dec57612dec6126aa565b81604052828152876020848701011115612e0557600080fd5b612e168360208301602088016128bf565b979650505050505050565b60008060008060808587031215612e3757600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160801b03828116828216039080821115612e7757612e77612b79565b5092915050565b6101008101612e8d8287612bb4565b60029490940b60a082015291151560c08301526001600160801b031660e090910152919050565b600081600f0b6f7fffffffffffffffffffffffffffffff198103612eda57612eda612b79565b60000392915050565b600060208284031215612ef557600080fd5b815161143c816124f4565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff169084015260608083015160020b9084015260809182015116910152565b60e08101612f518286612f00565b8360020b60a083015282151560c0830152949350505050565b8181038181111561147d5761147d612b79565b8183823760009101908152919050565b600060208284031215612f9f57600080fd5b813561143c816124f4565b6101208101612fb98288612bb4565b60029590950b60a082015292151560c084015260e08301919091526001600160a01b031661010090910152919050565b60a0810161147d8284612f00565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b8061302457613024612ff7565b627fffff1982146000198214161561303e5761303e612b79565b90059392505050565b60008260020b8061305a5761305a612ff7565b808360020b0791505092915050565b60008160020b627fffff19810361308257613082612b79565b6000190192915050565b60008260020b8260020b028060020b9150808214612e7757612e77612b79565b600282810b9082900b03627fffff198112627fffff8213171561147d5761147d612b79565b60e08101612f518286612bb4565b600080600080608085870312156130f557600080fd5b84516131008161237f565b6020860151909450613111816124e5565b604086015190935061ffff8116811461312957600080fd5b606086015190925061260d816126c056fea26469706673582212201b011a7c148598f1e3d0dced5731284986f1a48681e8700bb83e7027d6cc866864736f6c63430008130033";

type LimitOrderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitOrderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitOrder__factory extends ContractFactory {
  constructor(...args: LimitOrderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _poolManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_poolManager, overrides || {});
  }
  override deploy(
    _poolManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_poolManager, overrides || {}) as Promise<
      LimitOrder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LimitOrder__factory {
    return super.connect(runner) as LimitOrder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitOrderInterface {
    return new Interface(_abi) as LimitOrderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LimitOrder {
    return new Contract(address, _abi, runner) as unknown as LimitOrder;
  }
}
